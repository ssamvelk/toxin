!function(n){function e(e){for(var i,o,r=e[0],l=e[1],u=e[2],c=0,h=[];c<r.length;c++)o=r[c],s[o]&&h.push(s[o][0]),s[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(n[i]=l[i]);for(d&&d(e);h.length;)h.shift()();return a.push.apply(a,u||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],i=!0,r=1;r<t.length;r++){var l=t[r];0!==s[l]&&(i=!1)}i&&(a.splice(e--,1),n=o(o.s=t[0]))}return n}var i={},s={0:0},a=[];function o(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.m=n,o.c=i,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)o.d(t,i,function(e){return n[e]}.bind(null,i));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="";var r=window.webpackJsonp=window.webpackJsonp||[],l=r.push.bind(r);r.push=e,r=r.slice();for(var u=0;u<r.length;u++)e(r[u]);var d=l;a.push([2,1]),t()}([,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_common_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);\n/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_scss_main_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _vendors_datepicker_datepicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);\n/* harmony import */ var _vendors_datepicker_datepicker__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_vendors_datepicker_datepicker__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _vendors_datepicker_css_datepicker_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);\n/* harmony import */ var _vendors_datepicker_css_datepicker_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_vendors_datepicker_css_datepicker_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _blocks_form_elements_dropdown_dropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(10);\n/* harmony import */ var _blocks_form_elements_dropdown_dropdown__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_blocks_form_elements_dropdown_dropdown__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _blocks_form_elements_date_date__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(11);\n/* harmony import */ var _blocks_form_elements_date_date__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_blocks_form_elements_date_date__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _blocks_form_elements_like_like__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12);\n/* harmony import */ var _blocks_form_elements_like_like__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_blocks_form_elements_like_like__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _blocks_form_elements_slider_slider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(13);\n/* harmony import */ var _blocks_form_elements_checkbox_checkbox__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(25);\n/* harmony import */ var _blocks_form_elements_checkbox_checkbox__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_blocks_form_elements_checkbox_checkbox__WEBPACK_IMPORTED_MODULE_8__);\n //require('webpack-jquery-ui');\n//require('webpack-jquery-ui/css');\n\n\n\n //import '../vendors/datepicker/css/datepicker.min.css'\n\n\n\n\n\n\n //import { strict } from 'assert';\n\n//# sourceURL=webpack:///./js/index.js?")},function(module,exports){eval("/*\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function(){\r\n    var backgroundImage =['../static/source/bg_image.jpg', '../static/source/bg_image2.jpg', '../static/source/bg_image3.jpg'],\r\n    bgDiv = document.querySelector('.main__wrapper'),\r\n    funk1 = function (){bgDiv.style.background = \"url('../static/source/bg_image.jpg') no-repeat 50% -70px, white;\"},\r\n    funk2 = function (){bgDiv.style.background = \"url('../static/source/bg_image2.jpg') no-repeat 50% -70px, white;\"},\r\n    funk3 = function (){bgDiv.style.background = \"url('../static/source/bg_image3.jpg') no-repeat 50% -70px, white;\"}\r\n\r\n\r\n    let JJJJ = (function(){\r\n                    setTimeout(  funk1, 1000);\r\n                    setTimeout(  funk2, 1000);\r\n                    setTimeout(  funk3, 1000);\r\n                })()\r\n\r\n})\r\n\r\n*/\n\n//# sourceURL=webpack:///./js/common.js?")},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(5);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./scss/main.scss?")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./scss/main.scss?../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js??ref--7-2!../node_modules/postcss-loader/src??ref--7-3!../node_modules/sass-loader/lib/loader.js??ref--7-4")},,function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(jQuery) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n;\n\n(function (window, $, undefined) {\n  ;\n\n  (function () {\n    var VERSION = '2.2.3',\n        pluginName = 'datepicker',\n        autoInitSelector = '.datepicker-here',\n        $body,\n        $datepickersContainer,\n        containerBuilt = false,\n        baseTemplate = '' + '<div class=\"datepicker\">' + '<i class=\"datepicker--pointer\"></i>' + '<nav class=\"datepicker--nav\"></nav>' + '<div class=\"datepicker--content\"></div>' + '</div>',\n        defaults = {\n      classes: '',\n      inline: false,\n      language: 'ru',\n      startDate: new Date(),\n      firstDay: '',\n      weekends: [6, 0],\n      dateFormat: '',\n      altField: '',\n      altFieldDateFormat: '@',\n      toggleSelected: true,\n      keyboardNav: true,\n      position: 'bottom left',\n      offset: 12,\n      view: 'days',\n      minView: 'days',\n      showOtherMonths: true,\n      selectOtherMonths: true,\n      moveToOtherMonthsOnSelect: true,\n      showOtherYears: true,\n      selectOtherYears: true,\n      moveToOtherYearsOnSelect: true,\n      minDate: '',\n      maxDate: '',\n      disableNavWhenOutOfRange: true,\n      multipleDates: false,\n      // Boolean or Number\n      multipleDatesSeparator: ',',\n      range: false,\n      todayButton: false,\n      clearButton: false,\n      showEvent: 'focus',\n      autoClose: false,\n      // navigation\n      monthsField: 'monthsShort',\n      prevHtml: '<svg><path d=\"M 17,12 l -5,5 l 5,5\"></path></svg>',\n      nextHtml: '<svg><path d=\"M 14,12 l 5,5 l -5,5\"></path></svg>',\n      navTitles: {\n        days: 'MM, <i>yyyy</i>',\n        months: 'yyyy',\n        years: 'yyyy1 - yyyy2'\n      },\n      // timepicker\n      timepicker: false,\n      onlyTimepicker: false,\n      dateTimeSeparator: ' ',\n      timeFormat: '',\n      minHours: 0,\n      maxHours: 24,\n      minMinutes: 0,\n      maxMinutes: 59,\n      hoursStep: 1,\n      minutesStep: 1,\n      // events\n      onSelect: '',\n      onShow: '',\n      onHide: '',\n      onChangeMonth: '',\n      onChangeYear: '',\n      onChangeDecade: '',\n      onChangeView: '',\n      onRenderCell: ''\n    },\n        hotKeys = {\n      'ctrlRight': [17, 39],\n      'ctrlUp': [17, 38],\n      'ctrlLeft': [17, 37],\n      'ctrlDown': [17, 40],\n      'shiftRight': [16, 39],\n      'shiftUp': [16, 38],\n      'shiftLeft': [16, 37],\n      'shiftDown': [16, 40],\n      'altUp': [18, 38],\n      'altRight': [18, 39],\n      'altLeft': [18, 37],\n      'altDown': [18, 40],\n      'ctrlShiftUp': [16, 17, 38]\n    },\n        datepicker;\n\n    var Datepicker = function Datepicker(el, options) {\n      this.el = el;\n      this.$el = $(el);\n      this.opts = $.extend(true, {}, defaults, options, this.$el.data());\n\n      if ($body == undefined) {\n        $body = $('body');\n      }\n\n      if (!this.opts.startDate) {\n        this.opts.startDate = new Date();\n      }\n\n      if (this.el.nodeName == 'INPUT') {\n        this.elIsInput = true;\n      }\n\n      if (this.opts.altField) {\n        this.$altField = typeof this.opts.altField == 'string' ? $(this.opts.altField) : this.opts.altField;\n      }\n\n      this.inited = false;\n      this.visible = false;\n      this.silent = false; // Need to prevent unnecessary rendering\n\n      this.currentDate = this.opts.startDate;\n      this.currentView = this.opts.view;\n\n      this._createShortCuts();\n\n      this.selectedDates = [];\n      this.views = {};\n      this.keys = [];\n      this.minRange = '';\n      this.maxRange = '';\n      this._prevOnSelectValue = '';\n      this.init();\n    };\n\n    datepicker = Datepicker;\n    datepicker.prototype = {\n      VERSION: VERSION,\n      viewIndexes: ['days', 'months', 'years'],\n      init: function init() {\n        if (!containerBuilt && !this.opts.inline && this.elIsInput) {\n          this._buildDatepickersContainer();\n        }\n\n        this._buildBaseHtml();\n\n        this._defineLocale(this.opts.language);\n\n        this._syncWithMinMaxDates();\n\n        if (this.elIsInput) {\n          if (!this.opts.inline) {\n            // Set extra classes for proper transitions\n            this._setPositionClasses(this.opts.position);\n\n            this._bindEvents();\n          }\n\n          if (this.opts.keyboardNav && !this.opts.onlyTimepicker) {\n            this._bindKeyboardEvents();\n          }\n\n          this.$datepicker.on('mousedown', this._onMouseDownDatepicker.bind(this));\n          this.$datepicker.on('mouseup', this._onMouseUpDatepicker.bind(this));\n        }\n\n        if (this.opts.classes) {\n          this.$datepicker.addClass(this.opts.classes);\n        }\n\n        if (this.opts.timepicker) {\n          this.timepicker = new $.fn.datepicker.Timepicker(this, this.opts);\n\n          this._bindTimepickerEvents();\n        }\n\n        if (this.opts.onlyTimepicker) {\n          this.$datepicker.addClass('-only-timepicker-');\n        }\n\n        this.views[this.currentView] = new $.fn.datepicker.Body(this, this.currentView, this.opts);\n        this.views[this.currentView].show();\n        this.nav = new $.fn.datepicker.Navigation(this, this.opts);\n        this.view = this.currentView;\n        this.$el.on('clickCell.adp', this._onClickCell.bind(this));\n        this.$datepicker.on('mouseenter', '.datepicker--cell', this._onMouseEnterCell.bind(this));\n        this.$datepicker.on('mouseleave', '.datepicker--cell', this._onMouseLeaveCell.bind(this));\n        this.inited = true;\n      },\n      _createShortCuts: function _createShortCuts() {\n        this.minDate = this.opts.minDate ? this.opts.minDate : new Date(-8639999913600000);\n        this.maxDate = this.opts.maxDate ? this.opts.maxDate : new Date(8639999913600000);\n      },\n      _bindEvents: function _bindEvents() {\n        this.$el.on(this.opts.showEvent + '.adp', this._onShowEvent.bind(this));\n        this.$el.on('mouseup.adp', this._onMouseUpEl.bind(this));\n        this.$el.on('blur.adp', this._onBlur.bind(this));\n        this.$el.on('keyup.adp', this._onKeyUpGeneral.bind(this));\n        $(window).on('resize.adp', this._onResize.bind(this));\n        $('body').on('mouseup.adp', this._onMouseUpBody.bind(this));\n      },\n      _bindKeyboardEvents: function _bindKeyboardEvents() {\n        this.$el.on('keydown.adp', this._onKeyDown.bind(this));\n        this.$el.on('keyup.adp', this._onKeyUp.bind(this));\n        this.$el.on('hotKey.adp', this._onHotKey.bind(this));\n      },\n      _bindTimepickerEvents: function _bindTimepickerEvents() {\n        this.$el.on('timeChange.adp', this._onTimeChange.bind(this));\n      },\n      isWeekend: function isWeekend(day) {\n        return this.opts.weekends.indexOf(day) !== -1;\n      },\n      _defineLocale: function _defineLocale(lang) {\n        if (typeof lang == 'string') {\n          this.loc = $.fn.datepicker.language[lang];\n\n          if (!this.loc) {\n            console.warn('Can\\'t find language \"' + lang + '\" in Datepicker.language, will use \"ru\" instead');\n            this.loc = $.extend(true, {}, $.fn.datepicker.language.ru);\n          }\n\n          this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, $.fn.datepicker.language[lang]);\n        } else {\n          this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, lang);\n        }\n\n        if (this.opts.dateFormat) {\n          this.loc.dateFormat = this.opts.dateFormat;\n        }\n\n        if (this.opts.timeFormat) {\n          this.loc.timeFormat = this.opts.timeFormat;\n        }\n\n        if (this.opts.firstDay !== '') {\n          this.loc.firstDay = this.opts.firstDay;\n        }\n\n        if (this.opts.timepicker) {\n          this.loc.dateFormat = [this.loc.dateFormat, this.loc.timeFormat].join(this.opts.dateTimeSeparator);\n        }\n\n        if (this.opts.onlyTimepicker) {\n          this.loc.dateFormat = this.loc.timeFormat;\n        }\n\n        var boundary = this._getWordBoundaryRegExp;\n\n        if (this.loc.timeFormat.match(boundary('aa')) || this.loc.timeFormat.match(boundary('AA'))) {\n          this.ampm = true;\n        }\n      },\n      _buildDatepickersContainer: function _buildDatepickersContainer() {\n        containerBuilt = true;\n        $body.append('<div class=\"datepickers-container\" id=\"datepickers-container\"></div>');\n        $datepickersContainer = $('#datepickers-container');\n      },\n      _buildBaseHtml: function _buildBaseHtml() {\n        var $appendTarget,\n            $inline = $('<div class=\"datepicker-inline\">');\n\n        if (this.el.nodeName == 'INPUT') {\n          if (!this.opts.inline) {\n            $appendTarget = $datepickersContainer;\n          } else {\n            $appendTarget = $inline.insertAfter(this.$el);\n          }\n        } else {\n          $appendTarget = $inline.appendTo(this.$el);\n        }\n\n        this.$datepicker = $(baseTemplate).appendTo($appendTarget);\n        this.$content = $('.datepicker--content', this.$datepicker);\n        this.$nav = $('.datepicker--nav', this.$datepicker);\n      },\n      _triggerOnChange: function _triggerOnChange() {\n        if (!this.selectedDates.length) {\n          // Prevent from triggering multiple onSelect callback with same argument (empty string) in IE10-11\n          if (this._prevOnSelectValue === '') return;\n          this._prevOnSelectValue = '';\n          return this.opts.onSelect('', '', this);\n        }\n\n        var selectedDates = this.selectedDates,\n            parsedSelected = datepicker.getParsedDate(selectedDates[0]),\n            formattedDates,\n            _this = this,\n            dates = new Date(parsedSelected.year, parsedSelected.month, parsedSelected.date, parsedSelected.hours, parsedSelected.minutes);\n\n        formattedDates = selectedDates.map(function (date) {\n          return _this.formatDate(_this.loc.dateFormat, date);\n        }).join(this.opts.multipleDatesSeparator); // Create new dates array, to separate it from original selectedDates\n\n        if (this.opts.multipleDates || this.opts.range) {\n          dates = selectedDates.map(function (date) {\n            var parsedDate = datepicker.getParsedDate(date);\n            return new Date(parsedDate.year, parsedDate.month, parsedDate.date, parsedDate.hours, parsedDate.minutes);\n          });\n        }\n\n        this._prevOnSelectValue = formattedDates;\n        this.opts.onSelect(formattedDates, dates, this);\n      },\n      next: function next() {\n        var d = this.parsedDate,\n            o = this.opts;\n\n        switch (this.view) {\n          case 'days':\n            this.date = new Date(d.year, d.month + 1, 1);\n            if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\n            break;\n\n          case 'months':\n            this.date = new Date(d.year + 1, d.month, 1);\n            if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\n            break;\n\n          case 'years':\n            this.date = new Date(d.year + 10, 0, 1);\n            if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\n            break;\n        }\n      },\n      prev: function prev() {\n        var d = this.parsedDate,\n            o = this.opts;\n\n        switch (this.view) {\n          case 'days':\n            this.date = new Date(d.year, d.month - 1, 1);\n            if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\n            break;\n\n          case 'months':\n            this.date = new Date(d.year - 1, d.month, 1);\n            if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\n            break;\n\n          case 'years':\n            this.date = new Date(d.year - 10, 0, 1);\n            if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\n            break;\n        }\n      },\n      formatDate: function formatDate(string, date) {\n        date = date || this.date;\n        var result = string,\n            boundary = this._getWordBoundaryRegExp,\n            locale = this.loc,\n            leadingZero = datepicker.getLeadingZeroNum,\n            decade = datepicker.getDecade(date),\n            d = datepicker.getParsedDate(date),\n            fullHours = d.fullHours,\n            hours = d.hours,\n            ampm = string.match(boundary('aa')) || string.match(boundary('AA')),\n            dayPeriod = 'am',\n            replacer = this._replacer,\n            validHours;\n\n        if (this.opts.timepicker && this.timepicker && ampm) {\n          validHours = this.timepicker._getValidHoursFromDate(date, ampm);\n          fullHours = leadingZero(validHours.hours);\n          hours = validHours.hours;\n          dayPeriod = validHours.dayPeriod;\n        }\n\n        switch (true) {\n          case /@/.test(result):\n            result = result.replace(/@/, date.getTime());\n\n          case /aa/.test(result):\n            result = replacer(result, boundary('aa'), dayPeriod);\n\n          case /AA/.test(result):\n            result = replacer(result, boundary('AA'), dayPeriod.toUpperCase());\n\n          case /dd/.test(result):\n            result = replacer(result, boundary('dd'), d.fullDate);\n\n          case /d/.test(result):\n            result = replacer(result, boundary('d'), d.date);\n\n          case /DD/.test(result):\n            result = replacer(result, boundary('DD'), locale.days[d.day]);\n\n          case /D/.test(result):\n            result = replacer(result, boundary('D'), locale.daysShort[d.day]);\n\n          case /mm/.test(result):\n            result = replacer(result, boundary('mm'), d.fullMonth);\n\n          case /m/.test(result):\n            result = replacer(result, boundary('m'), d.month + 1);\n\n          case /MM/.test(result):\n            result = replacer(result, boundary('MM'), this.loc.months[d.month]);\n\n          case /M/.test(result):\n            result = replacer(result, boundary('M'), locale.monthsShort[d.month]);\n\n          case /ii/.test(result):\n            result = replacer(result, boundary('ii'), d.fullMinutes);\n\n          case /i/.test(result):\n            result = replacer(result, boundary('i'), d.minutes);\n\n          case /hh/.test(result):\n            result = replacer(result, boundary('hh'), fullHours);\n\n          case /h/.test(result):\n            result = replacer(result, boundary('h'), hours);\n\n          case /yyyy/.test(result):\n            result = replacer(result, boundary('yyyy'), d.year);\n\n          case /yyyy1/.test(result):\n            result = replacer(result, boundary('yyyy1'), decade[0]);\n\n          case /yyyy2/.test(result):\n            result = replacer(result, boundary('yyyy2'), decade[1]);\n\n          case /yy/.test(result):\n            result = replacer(result, boundary('yy'), d.year.toString().slice(-2));\n        }\n\n        return result;\n      },\n      _replacer: function _replacer(str, reg, data) {\n        return str.replace(reg, function (match, p1, p2, p3) {\n          return p1 + data + p3;\n        });\n      },\n      _getWordBoundaryRegExp: function _getWordBoundaryRegExp(sign) {\n        var symbols = '\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;';\n        return new RegExp('(^|>|' + symbols + ')(' + sign + ')($|<|' + symbols + ')', 'g');\n      },\n      selectDate: function selectDate(date) {\n        var _this = this,\n            opts = _this.opts,\n            d = _this.parsedDate,\n            selectedDates = _this.selectedDates,\n            len = selectedDates.length,\n            newDate = '';\n\n        if (Array.isArray(date)) {\n          date.forEach(function (d) {\n            _this.selectDate(d);\n          });\n          return;\n        }\n\n        if (!(date instanceof Date)) return;\n        this.lastSelectedDate = date; // Set new time values from Date\n\n        if (this.timepicker) {\n          this.timepicker._setTime(date);\n        } // On this step timepicker will set valid values in it's instance\n\n\n        _this._trigger('selectDate', date); // Set correct time values after timepicker's validation\n        // Prevent from setting hours or minutes which values are lesser then `min` value or\n        // greater then `max` value\n\n\n        if (this.timepicker) {\n          date.setHours(this.timepicker.hours);\n          date.setMinutes(this.timepicker.minutes);\n        }\n\n        if (_this.view == 'days') {\n          if (date.getMonth() != d.month && opts.moveToOtherMonthsOnSelect) {\n            newDate = new Date(date.getFullYear(), date.getMonth(), 1);\n          }\n        }\n\n        if (_this.view == 'years') {\n          if (date.getFullYear() != d.year && opts.moveToOtherYearsOnSelect) {\n            newDate = new Date(date.getFullYear(), 0, 1);\n          }\n        }\n\n        if (newDate) {\n          _this.silent = true;\n          _this.date = newDate;\n          _this.silent = false;\n\n          _this.nav._render();\n        }\n\n        if (opts.multipleDates && !opts.range) {\n          // Set priority to range functionality\n          if (len === opts.multipleDates) return;\n\n          if (!_this._isSelected(date)) {\n            _this.selectedDates.push(date);\n          }\n        } else if (opts.range) {\n          if (len == 2) {\n            _this.selectedDates = [date];\n            _this.minRange = date;\n            _this.maxRange = '';\n          } else if (len == 1) {\n            _this.selectedDates.push(date);\n\n            if (!_this.maxRange) {\n              _this.maxRange = date;\n            } else {\n              _this.minRange = date;\n            } // Swap dates if they were selected via dp.selectDate() and second date was smaller then first\n\n\n            if (datepicker.bigger(_this.maxRange, _this.minRange)) {\n              _this.maxRange = _this.minRange;\n              _this.minRange = date;\n            }\n\n            _this.selectedDates = [_this.minRange, _this.maxRange];\n          } else {\n            _this.selectedDates = [date];\n            _this.minRange = date;\n          }\n        } else {\n          _this.selectedDates = [date];\n        }\n\n        _this._setInputValue();\n\n        if (opts.onSelect) {\n          _this._triggerOnChange();\n        }\n\n        if (opts.autoClose && !this.timepickerIsActive) {\n          if (!opts.multipleDates && !opts.range) {\n            _this.hide();\n          } else if (opts.range && _this.selectedDates.length == 2) {\n            _this.hide();\n          }\n        }\n\n        _this.views[this.currentView]._render();\n      },\n      removeDate: function removeDate(date) {\n        var selected = this.selectedDates,\n            _this = this;\n\n        if (!(date instanceof Date)) return;\n        return selected.some(function (curDate, i) {\n          if (datepicker.isSame(curDate, date)) {\n            selected.splice(i, 1);\n\n            if (!_this.selectedDates.length) {\n              _this.minRange = '';\n              _this.maxRange = '';\n              _this.lastSelectedDate = '';\n            } else {\n              _this.lastSelectedDate = _this.selectedDates[_this.selectedDates.length - 1];\n            }\n\n            _this.views[_this.currentView]._render();\n\n            _this._setInputValue();\n\n            if (_this.opts.onSelect) {\n              _this._triggerOnChange();\n            }\n\n            return true;\n          }\n        });\n      },\n      today: function today() {\n        this.silent = true;\n        this.view = this.opts.minView;\n        this.silent = false;\n        this.date = new Date();\n\n        if (this.opts.todayButton instanceof Date) {\n          this.selectDate(this.opts.todayButton);\n        }\n      },\n      clear: function clear() {\n        this.selectedDates = [];\n        this.minRange = '';\n        this.maxRange = '';\n\n        this.views[this.currentView]._render();\n\n        this._setInputValue();\n\n        if (this.opts.onSelect) {\n          this._triggerOnChange();\n        }\n      },\n\n      /**\n       * Updates datepicker options\n       * @param {String|Object} param - parameter's name to update. If object then it will extend current options\n       * @param {String|Number|Object} [value] - new param value\n       */\n      update: function update(param, value) {\n        var len = arguments.length,\n            lastSelectedDate = this.lastSelectedDate;\n\n        if (len == 2) {\n          this.opts[param] = value;\n        } else if (len == 1 && _typeof(param) == 'object') {\n          this.opts = $.extend(true, this.opts, param);\n        }\n\n        this._createShortCuts();\n\n        this._syncWithMinMaxDates();\n\n        this._defineLocale(this.opts.language);\n\n        this.nav._addButtonsIfNeed();\n\n        if (!this.opts.onlyTimepicker) this.nav._render();\n\n        this.views[this.currentView]._render();\n\n        if (this.elIsInput && !this.opts.inline) {\n          this._setPositionClasses(this.opts.position);\n\n          if (this.visible) {\n            this.setPosition(this.opts.position);\n          }\n        }\n\n        if (this.opts.classes) {\n          this.$datepicker.addClass(this.opts.classes);\n        }\n\n        if (this.opts.onlyTimepicker) {\n          this.$datepicker.addClass('-only-timepicker-');\n        }\n\n        if (this.opts.timepicker) {\n          if (lastSelectedDate) this.timepicker._handleDate(lastSelectedDate);\n\n          this.timepicker._updateRanges();\n\n          this.timepicker._updateCurrentTime(); // Change hours and minutes if it's values have been changed through min/max hours/minutes\n\n\n          if (lastSelectedDate) {\n            lastSelectedDate.setHours(this.timepicker.hours);\n            lastSelectedDate.setMinutes(this.timepicker.minutes);\n          }\n        }\n\n        this._setInputValue();\n\n        return this;\n      },\n      _syncWithMinMaxDates: function _syncWithMinMaxDates() {\n        var curTime = this.date.getTime();\n        this.silent = true;\n\n        if (this.minTime > curTime) {\n          this.date = this.minDate;\n        }\n\n        if (this.maxTime < curTime) {\n          this.date = this.maxDate;\n        }\n\n        this.silent = false;\n      },\n      _isSelected: function _isSelected(checkDate, cellType) {\n        var res = false;\n        this.selectedDates.some(function (date) {\n          if (datepicker.isSame(date, checkDate, cellType)) {\n            res = date;\n            return true;\n          }\n        });\n        return res;\n      },\n      _setInputValue: function _setInputValue() {\n        var _this = this,\n            opts = _this.opts,\n            format = _this.loc.dateFormat,\n            altFormat = opts.altFieldDateFormat,\n            value = _this.selectedDates.map(function (date) {\n          return _this.formatDate(format, date);\n        }),\n            altValues;\n\n        if (opts.altField && _this.$altField.length) {\n          altValues = this.selectedDates.map(function (date) {\n            return _this.formatDate(altFormat, date);\n          });\n          altValues = altValues.join(this.opts.multipleDatesSeparator);\n          this.$altField.val(altValues);\n        }\n\n        value = value.join(this.opts.multipleDatesSeparator);\n        this.$el.val(value);\n      },\n\n      /**\n       * Check if date is between minDate and maxDate\n       * @param date {object} - date object\n       * @param type {string} - cell type\n       * @returns {boolean}\n       * @private\n       */\n      _isInRange: function _isInRange(date, type) {\n        var time = date.getTime(),\n            d = datepicker.getParsedDate(date),\n            min = datepicker.getParsedDate(this.minDate),\n            max = datepicker.getParsedDate(this.maxDate),\n            dMinTime = new Date(d.year, d.month, min.date).getTime(),\n            dMaxTime = new Date(d.year, d.month, max.date).getTime(),\n            types = {\n          day: time >= this.minTime && time <= this.maxTime,\n          month: dMinTime >= this.minTime && dMaxTime <= this.maxTime,\n          year: d.year >= min.year && d.year <= max.year\n        };\n        return type ? types[type] : types.day;\n      },\n      _getDimensions: function _getDimensions($el) {\n        var offset = $el.offset();\n        return {\n          width: $el.outerWidth(),\n          height: $el.outerHeight(),\n          left: offset.left,\n          top: offset.top\n        };\n      },\n      _getDateFromCell: function _getDateFromCell(cell) {\n        var curDate = this.parsedDate,\n            year = cell.data('year') || curDate.year,\n            month = cell.data('month') == undefined ? curDate.month : cell.data('month'),\n            date = cell.data('date') || 1;\n        return new Date(year, month, date);\n      },\n      _setPositionClasses: function _setPositionClasses(pos) {\n        pos = pos.split(' ');\n        var main = pos[0],\n            sec = pos[1],\n            classes = 'datepicker -' + main + '-' + sec + '- -from-' + main + '-';\n        if (this.visible) classes += ' active';\n        this.$datepicker.removeAttr('class').addClass(classes);\n      },\n      setPosition: function setPosition(position) {\n        position = position || this.opts.position;\n\n        var dims = this._getDimensions(this.$el),\n            selfDims = this._getDimensions(this.$datepicker),\n            pos = position.split(' '),\n            top,\n            left,\n            offset = this.opts.offset,\n            main = pos[0],\n            secondary = pos[1];\n\n        switch (main) {\n          case 'top':\n            top = dims.top - selfDims.height - offset;\n            break;\n\n          case 'right':\n            left = dims.left + dims.width + offset;\n            break;\n\n          case 'bottom':\n            top = dims.top + dims.height + offset;\n            break;\n\n          case 'left':\n            left = dims.left - selfDims.width - offset;\n            break;\n        }\n\n        switch (secondary) {\n          case 'top':\n            top = dims.top;\n            break;\n\n          case 'right':\n            left = dims.left + dims.width - selfDims.width;\n            break;\n\n          case 'bottom':\n            top = dims.top + dims.height - selfDims.height;\n            break;\n\n          case 'left':\n            left = dims.left;\n            break;\n\n          case 'center':\n            if (/left|right/.test(main)) {\n              top = dims.top + dims.height / 2 - selfDims.height / 2;\n            } else {\n              left = dims.left + dims.width / 2 - selfDims.width / 2;\n            }\n\n        }\n\n        this.$datepicker.css({\n          left: left,\n          top: top\n        });\n      },\n      show: function show() {\n        var onShow = this.opts.onShow;\n        this.setPosition(this.opts.position);\n        this.$datepicker.addClass('active');\n        this.visible = true;\n\n        if (onShow) {\n          this._bindVisionEvents(onShow);\n        }\n      },\n      hide: function hide() {\n        var onHide = this.opts.onHide;\n        this.$datepicker.removeClass('active').css({\n          left: '-100000px'\n        });\n        this.focused = '';\n        this.keys = [];\n        this.inFocus = false;\n        this.visible = false;\n        this.$el.blur();\n\n        if (onHide) {\n          this._bindVisionEvents(onHide);\n        }\n      },\n      down: function down(date) {\n        this._changeView(date, 'down');\n      },\n      up: function up(date) {\n        this._changeView(date, 'up');\n      },\n      _bindVisionEvents: function _bindVisionEvents(event) {\n        this.$datepicker.off('transitionend.dp');\n        event(this, false);\n        this.$datepicker.one('transitionend.dp', event.bind(this, this, true));\n      },\n      _changeView: function _changeView(date, dir) {\n        date = date || this.focused || this.date;\n        var nextView = dir == 'up' ? this.viewIndex + 1 : this.viewIndex - 1;\n        if (nextView > 2) nextView = 2;\n        if (nextView < 0) nextView = 0;\n        this.silent = true;\n        this.date = new Date(date.getFullYear(), date.getMonth(), 1);\n        this.silent = false;\n        this.view = this.viewIndexes[nextView];\n      },\n      _handleHotKey: function _handleHotKey(key) {\n        var date = datepicker.getParsedDate(this._getFocusedDate()),\n            focusedParsed,\n            o = this.opts,\n            newDate,\n            totalDaysInNextMonth,\n            monthChanged = false,\n            yearChanged = false,\n            decadeChanged = false,\n            y = date.year,\n            m = date.month,\n            d = date.date;\n\n        switch (key) {\n          case 'ctrlRight':\n          case 'ctrlUp':\n            m += 1;\n            monthChanged = true;\n            break;\n\n          case 'ctrlLeft':\n          case 'ctrlDown':\n            m -= 1;\n            monthChanged = true;\n            break;\n\n          case 'shiftRight':\n          case 'shiftUp':\n            yearChanged = true;\n            y += 1;\n            break;\n\n          case 'shiftLeft':\n          case 'shiftDown':\n            yearChanged = true;\n            y -= 1;\n            break;\n\n          case 'altRight':\n          case 'altUp':\n            decadeChanged = true;\n            y += 10;\n            break;\n\n          case 'altLeft':\n          case 'altDown':\n            decadeChanged = true;\n            y -= 10;\n            break;\n\n          case 'ctrlShiftUp':\n            this.up();\n            break;\n        }\n\n        totalDaysInNextMonth = datepicker.getDaysCount(new Date(y, m));\n        newDate = new Date(y, m, d); // If next month has less days than current, set date to total days in that month\n\n        if (totalDaysInNextMonth < d) d = totalDaysInNextMonth; // Check if newDate is in valid range\n\n        if (newDate.getTime() < this.minTime) {\n          newDate = this.minDate;\n        } else if (newDate.getTime() > this.maxTime) {\n          newDate = this.maxDate;\n        }\n\n        this.focused = newDate;\n        focusedParsed = datepicker.getParsedDate(newDate);\n\n        if (monthChanged && o.onChangeMonth) {\n          o.onChangeMonth(focusedParsed.month, focusedParsed.year);\n        }\n\n        if (yearChanged && o.onChangeYear) {\n          o.onChangeYear(focusedParsed.year);\n        }\n\n        if (decadeChanged && o.onChangeDecade) {\n          o.onChangeDecade(this.curDecade);\n        }\n      },\n      _registerKey: function _registerKey(key) {\n        var exists = this.keys.some(function (curKey) {\n          return curKey == key;\n        });\n\n        if (!exists) {\n          this.keys.push(key);\n        }\n      },\n      _unRegisterKey: function _unRegisterKey(key) {\n        var index = this.keys.indexOf(key);\n        this.keys.splice(index, 1);\n      },\n      _isHotKeyPressed: function _isHotKeyPressed() {\n        var currentHotKey,\n            found = false,\n            _this = this,\n            pressedKeys = this.keys.sort();\n\n        for (var hotKey in hotKeys) {\n          currentHotKey = hotKeys[hotKey];\n          if (pressedKeys.length != currentHotKey.length) continue;\n\n          if (currentHotKey.every(function (key, i) {\n            return key == pressedKeys[i];\n          })) {\n            _this._trigger('hotKey', hotKey);\n\n            found = true;\n          }\n        }\n\n        return found;\n      },\n      _trigger: function _trigger(event, args) {\n        this.$el.trigger(event, args);\n      },\n      _focusNextCell: function _focusNextCell(keyCode, type) {\n        type = type || this.cellType;\n        var date = datepicker.getParsedDate(this._getFocusedDate()),\n            y = date.year,\n            m = date.month,\n            d = date.date;\n\n        if (this._isHotKeyPressed()) {\n          return;\n        }\n\n        switch (keyCode) {\n          case 37:\n            // left\n            type == 'day' ? d -= 1 : '';\n            type == 'month' ? m -= 1 : '';\n            type == 'year' ? y -= 1 : '';\n            break;\n\n          case 38:\n            // up\n            type == 'day' ? d -= 7 : '';\n            type == 'month' ? m -= 3 : '';\n            type == 'year' ? y -= 4 : '';\n            break;\n\n          case 39:\n            // right\n            type == 'day' ? d += 1 : '';\n            type == 'month' ? m += 1 : '';\n            type == 'year' ? y += 1 : '';\n            break;\n\n          case 40:\n            // down\n            type == 'day' ? d += 7 : '';\n            type == 'month' ? m += 3 : '';\n            type == 'year' ? y += 4 : '';\n            break;\n        }\n\n        var nd = new Date(y, m, d);\n\n        if (nd.getTime() < this.minTime) {\n          nd = this.minDate;\n        } else if (nd.getTime() > this.maxTime) {\n          nd = this.maxDate;\n        }\n\n        this.focused = nd;\n      },\n      _getFocusedDate: function _getFocusedDate() {\n        var focused = this.focused || this.selectedDates[this.selectedDates.length - 1],\n            d = this.parsedDate;\n\n        if (!focused) {\n          switch (this.view) {\n            case 'days':\n              focused = new Date(d.year, d.month, new Date().getDate());\n              break;\n\n            case 'months':\n              focused = new Date(d.year, d.month, 1);\n              break;\n\n            case 'years':\n              focused = new Date(d.year, 0, 1);\n              break;\n          }\n        }\n\n        return focused;\n      },\n      _getCell: function _getCell(date, type) {\n        type = type || this.cellType;\n        var d = datepicker.getParsedDate(date),\n            selector = '.datepicker--cell[data-year=\"' + d.year + '\"]',\n            $cell;\n\n        switch (type) {\n          case 'month':\n            selector = '[data-month=\"' + d.month + '\"]';\n            break;\n\n          case 'day':\n            selector += '[data-month=\"' + d.month + '\"][data-date=\"' + d.date + '\"]';\n            break;\n        }\n\n        $cell = this.views[this.currentView].$el.find(selector);\n        return $cell.length ? $cell : $('');\n      },\n      destroy: function destroy() {\n        var _this = this;\n\n        _this.$el.off('.adp').data('datepicker', '');\n\n        _this.selectedDates = [];\n        _this.focused = '';\n        _this.views = {};\n        _this.keys = [];\n        _this.minRange = '';\n        _this.maxRange = '';\n\n        if (_this.opts.inline || !_this.elIsInput) {\n          _this.$datepicker.closest('.datepicker-inline').remove();\n        } else {\n          _this.$datepicker.remove();\n        }\n      },\n      _handleAlreadySelectedDates: function _handleAlreadySelectedDates(alreadySelected, selectedDate) {\n        if (this.opts.range) {\n          if (!this.opts.toggleSelected) {\n            // Add possibility to select same date when range is true\n            if (this.selectedDates.length != 2) {\n              this._trigger('clickCell', selectedDate);\n            }\n          } else {\n            this.removeDate(selectedDate);\n          }\n        } else if (this.opts.toggleSelected) {\n          this.removeDate(selectedDate);\n        } // Change last selected date to be able to change time when clicking on this cell\n\n\n        if (!this.opts.toggleSelected) {\n          this.lastSelectedDate = alreadySelected;\n\n          if (this.opts.timepicker) {\n            this.timepicker._setTime(alreadySelected);\n\n            this.timepicker.update();\n          }\n        }\n      },\n      _onShowEvent: function _onShowEvent(e) {\n        if (!this.visible) {\n          this.show();\n        }\n      },\n      _onBlur: function _onBlur() {\n        if (!this.inFocus && this.visible) {\n          this.hide();\n        }\n      },\n      _onMouseDownDatepicker: function _onMouseDownDatepicker(e) {\n        this.inFocus = true;\n      },\n      _onMouseUpDatepicker: function _onMouseUpDatepicker(e) {\n        this.inFocus = false;\n        e.originalEvent.inFocus = true;\n        if (!e.originalEvent.timepickerFocus) this.$el.focus();\n      },\n      _onKeyUpGeneral: function _onKeyUpGeneral(e) {\n        var val = this.$el.val();\n\n        if (!val) {\n          this.clear();\n        }\n      },\n      _onResize: function _onResize() {\n        if (this.visible) {\n          this.setPosition();\n        }\n      },\n      _onMouseUpBody: function _onMouseUpBody(e) {\n        if (e.originalEvent.inFocus) return;\n\n        if (this.visible && !this.inFocus) {\n          this.hide();\n        }\n      },\n      _onMouseUpEl: function _onMouseUpEl(e) {\n        e.originalEvent.inFocus = true;\n        setTimeout(this._onKeyUpGeneral.bind(this), 4);\n      },\n      _onKeyDown: function _onKeyDown(e) {\n        var code = e.which;\n\n        this._registerKey(code); // Arrows\n\n\n        if (code >= 37 && code <= 40) {\n          e.preventDefault();\n\n          this._focusNextCell(code);\n        } // Enter\n\n\n        if (code == 13) {\n          if (this.focused) {\n            if (this._getCell(this.focused).hasClass('-disabled-')) return;\n\n            if (this.view != this.opts.minView) {\n              this.down();\n            } else {\n              var alreadySelected = this._isSelected(this.focused, this.cellType);\n\n              if (!alreadySelected) {\n                if (this.timepicker) {\n                  this.focused.setHours(this.timepicker.hours);\n                  this.focused.setMinutes(this.timepicker.minutes);\n                }\n\n                this.selectDate(this.focused);\n                return;\n              }\n\n              this._handleAlreadySelectedDates(alreadySelected, this.focused);\n            }\n          }\n        } // Esc\n\n\n        if (code == 27) {\n          this.hide();\n        }\n      },\n      _onKeyUp: function _onKeyUp(e) {\n        var code = e.which;\n\n        this._unRegisterKey(code);\n      },\n      _onHotKey: function _onHotKey(e, hotKey) {\n        this._handleHotKey(hotKey);\n      },\n      _onMouseEnterCell: function _onMouseEnterCell(e) {\n        var $cell = $(e.target).closest('.datepicker--cell'),\n            date = this._getDateFromCell($cell); // Prevent from unnecessary rendering and setting new currentDate\n\n\n        this.silent = true;\n\n        if (this.focused) {\n          this.focused = '';\n        }\n\n        $cell.addClass('-focus-');\n        this.focused = date;\n        this.silent = false;\n\n        if (this.opts.range && this.selectedDates.length == 1) {\n          this.minRange = this.selectedDates[0];\n          this.maxRange = '';\n\n          if (datepicker.less(this.minRange, this.focused)) {\n            this.maxRange = this.minRange;\n            this.minRange = '';\n          }\n\n          this.views[this.currentView]._update();\n        }\n      },\n      _onMouseLeaveCell: function _onMouseLeaveCell(e) {\n        var $cell = $(e.target).closest('.datepicker--cell');\n        $cell.removeClass('-focus-');\n        this.silent = true;\n        this.focused = '';\n        this.silent = false;\n      },\n      _onTimeChange: function _onTimeChange(e, h, m) {\n        var date = new Date(),\n            selectedDates = this.selectedDates,\n            selected = false;\n\n        if (selectedDates.length) {\n          selected = true;\n          date = this.lastSelectedDate;\n        }\n\n        date.setHours(h);\n        date.setMinutes(m);\n\n        if (!selected && !this._getCell(date).hasClass('-disabled-')) {\n          this.selectDate(date);\n        } else {\n          this._setInputValue();\n\n          if (this.opts.onSelect) {\n            this._triggerOnChange();\n          }\n        }\n      },\n      _onClickCell: function _onClickCell(e, date) {\n        if (this.timepicker) {\n          date.setHours(this.timepicker.hours);\n          date.setMinutes(this.timepicker.minutes);\n        }\n\n        this.selectDate(date);\n      },\n\n      set focused(val) {\n        if (!val && this.focused) {\n          var $cell = this._getCell(this.focused);\n\n          if ($cell.length) {\n            $cell.removeClass('-focus-');\n          }\n        }\n\n        this._focused = val;\n\n        if (this.opts.range && this.selectedDates.length == 1) {\n          this.minRange = this.selectedDates[0];\n          this.maxRange = '';\n\n          if (datepicker.less(this.minRange, this._focused)) {\n            this.maxRange = this.minRange;\n            this.minRange = '';\n          }\n        }\n\n        if (this.silent) return;\n        this.date = val;\n      },\n\n      get focused() {\n        return this._focused;\n      },\n\n      get parsedDate() {\n        return datepicker.getParsedDate(this.date);\n      },\n\n      set date(val) {\n        if (!(val instanceof Date)) return;\n        this.currentDate = val;\n\n        if (this.inited && !this.silent) {\n          this.views[this.view]._render();\n\n          this.nav._render();\n\n          if (this.visible && this.elIsInput) {\n            this.setPosition();\n          }\n        }\n\n        return val;\n      },\n\n      get date() {\n        return this.currentDate;\n      },\n\n      set view(val) {\n        this.viewIndex = this.viewIndexes.indexOf(val);\n\n        if (this.viewIndex < 0) {\n          return;\n        }\n\n        this.prevView = this.currentView;\n        this.currentView = val;\n\n        if (this.inited) {\n          if (!this.views[val]) {\n            this.views[val] = new $.fn.datepicker.Body(this, val, this.opts);\n          } else {\n            this.views[val]._render();\n          }\n\n          this.views[this.prevView].hide();\n          this.views[val].show();\n\n          this.nav._render();\n\n          if (this.opts.onChangeView) {\n            this.opts.onChangeView(val);\n          }\n\n          if (this.elIsInput && this.visible) this.setPosition();\n        }\n\n        return val;\n      },\n\n      get view() {\n        return this.currentView;\n      },\n\n      get cellType() {\n        return this.view.substring(0, this.view.length - 1);\n      },\n\n      get minTime() {\n        var min = datepicker.getParsedDate(this.minDate);\n        return new Date(min.year, min.month, min.date).getTime();\n      },\n\n      get maxTime() {\n        var max = datepicker.getParsedDate(this.maxDate);\n        return new Date(max.year, max.month, max.date).getTime();\n      },\n\n      get curDecade() {\n        return datepicker.getDecade(this.date);\n      }\n\n    }; //  Utils\n    // -------------------------------------------------\n\n    datepicker.getDaysCount = function (date) {\n      return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    };\n\n    datepicker.getParsedDate = function (date) {\n      return {\n        year: date.getFullYear(),\n        month: date.getMonth(),\n        fullMonth: date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1,\n        // One based\n        date: date.getDate(),\n        fullDate: date.getDate() < 10 ? '0' + date.getDate() : date.getDate(),\n        day: date.getDay(),\n        hours: date.getHours(),\n        fullHours: date.getHours() < 10 ? '0' + date.getHours() : date.getHours(),\n        minutes: date.getMinutes(),\n        fullMinutes: date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()\n      };\n    };\n\n    datepicker.getDecade = function (date) {\n      var firstYear = Math.floor(date.getFullYear() / 10) * 10;\n      return [firstYear, firstYear + 9];\n    };\n\n    datepicker.template = function (str, data) {\n      return str.replace(/#\\{([\\w]+)\\}/g, function (source, match) {\n        if (data[match] || data[match] === 0) {\n          return data[match];\n        }\n      });\n    };\n\n    datepicker.isSame = function (date1, date2, type) {\n      if (!date1 || !date2) return false;\n\n      var d1 = datepicker.getParsedDate(date1),\n          d2 = datepicker.getParsedDate(date2),\n          _type = type ? type : 'day',\n          conditions = {\n        day: d1.date == d2.date && d1.month == d2.month && d1.year == d2.year,\n        month: d1.month == d2.month && d1.year == d2.year,\n        year: d1.year == d2.year\n      };\n\n      return conditions[_type];\n    };\n\n    datepicker.less = function (dateCompareTo, date, type) {\n      if (!dateCompareTo || !date) return false;\n      return date.getTime() < dateCompareTo.getTime();\n    };\n\n    datepicker.bigger = function (dateCompareTo, date, type) {\n      if (!dateCompareTo || !date) return false;\n      return date.getTime() > dateCompareTo.getTime();\n    };\n\n    datepicker.getLeadingZeroNum = function (num) {\n      return parseInt(num) < 10 ? '0' + num : num;\n    };\n    /**\n     * Returns copy of date with hours and minutes equals to 0\n     * @param date {Date}\n     */\n\n\n    datepicker.resetTime = function (date) {\n      if (_typeof(date) != 'object') return;\n      date = datepicker.getParsedDate(date);\n      return new Date(date.year, date.month, date.date);\n    };\n\n    $.fn.datepicker = function (options) {\n      return this.each(function () {\n        if (!$.data(this, pluginName)) {\n          $.data(this, pluginName, new Datepicker(this, options));\n        } else {\n          var _this = $.data(this, pluginName);\n\n          _this.opts = $.extend(true, _this.opts, options);\n\n          _this.update();\n        }\n      });\n    };\n\n    $.fn.datepicker.Constructor = Datepicker;\n    $.fn.datepicker.language = {\n      ru: {\n        days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n        daysShort: ['Вос', 'Пон', 'Вто', 'Сре', 'Чет', 'Пят', 'Суб'],\n        daysMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n        monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n        today: 'Сегодня',\n        clear: 'Очистить',\n        dateFormat: 'dd.mm.yyyy',\n        timeFormat: 'hh:ii',\n        firstDay: 1\n      }\n    };\n    $(function () {\n      $(autoInitSelector).datepicker();\n    });\n  })();\n\n  ;\n\n  (function () {\n    var templates = {\n      days: '' + '<div class=\"datepicker--days datepicker--body\">' + '<div class=\"datepicker--days-names\"></div>' + '<div class=\"datepicker--cells datepicker--cells-days\"></div>' + '</div>',\n      months: '' + '<div class=\"datepicker--months datepicker--body\">' + '<div class=\"datepicker--cells datepicker--cells-months\"></div>' + '</div>',\n      years: '' + '<div class=\"datepicker--years datepicker--body\">' + '<div class=\"datepicker--cells datepicker--cells-years\"></div>' + '</div>'\n    },\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Body = function (d, type, opts) {\n      this.d = d;\n      this.type = type;\n      this.opts = opts;\n      this.$el = $('');\n      if (this.opts.onlyTimepicker) return;\n      this.init();\n    };\n\n    datepicker.Body.prototype = {\n      init: function init() {\n        this._buildBaseHtml();\n\n        this._render();\n\n        this._bindEvents();\n      },\n      _bindEvents: function _bindEvents() {\n        this.$el.on('click', '.datepicker--cell', $.proxy(this._onClickCell, this));\n      },\n      _buildBaseHtml: function _buildBaseHtml() {\n        this.$el = $(templates[this.type]).appendTo(this.d.$content);\n        this.$names = $('.datepicker--days-names', this.$el);\n        this.$cells = $('.datepicker--cells', this.$el);\n      },\n      _getDayNamesHtml: function _getDayNamesHtml(firstDay, curDay, html, i) {\n        curDay = curDay != undefined ? curDay : firstDay;\n        html = html ? html : '';\n        i = i != undefined ? i : 0;\n        if (i > 7) return html;\n        if (curDay == 7) return this._getDayNamesHtml(firstDay, 0, html, ++i);\n        html += '<div class=\"datepicker--day-name' + (this.d.isWeekend(curDay) ? \" -weekend-\" : \"\") + '\">' + this.d.loc.daysMin[curDay] + '</div>';\n        return this._getDayNamesHtml(firstDay, ++curDay, html, ++i);\n      },\n      _getCellContents: function _getCellContents(date, type) {\n        var classes = \"datepicker--cell datepicker--cell-\" + type,\n            currentDate = new Date(),\n            parent = this.d,\n            minRange = dp.resetTime(parent.minRange),\n            maxRange = dp.resetTime(parent.maxRange),\n            opts = parent.opts,\n            d = dp.getParsedDate(date),\n            render = {},\n            html = d.date;\n\n        switch (type) {\n          case 'day':\n            if (parent.isWeekend(d.day)) classes += \" -weekend-\";\n\n            if (d.month != this.d.parsedDate.month) {\n              classes += \" -other-month-\";\n\n              if (!opts.selectOtherMonths) {\n                classes += \" -disabled-\";\n              }\n\n              if (!opts.showOtherMonths) html = '';\n            }\n\n            break;\n\n          case 'month':\n            html = parent.loc[parent.opts.monthsField][d.month];\n            break;\n\n          case 'year':\n            var decade = parent.curDecade;\n            html = d.year;\n\n            if (d.year < decade[0] || d.year > decade[1]) {\n              classes += ' -other-decade-';\n\n              if (!opts.selectOtherYears) {\n                classes += \" -disabled-\";\n              }\n\n              if (!opts.showOtherYears) html = '';\n            }\n\n            break;\n        }\n\n        if (opts.onRenderCell) {\n          render = opts.onRenderCell(date, type) || {};\n          html = render.html ? render.html : html;\n          classes += render.classes ? ' ' + render.classes : '';\n        }\n\n        if (opts.range) {\n          if (dp.isSame(minRange, date, type)) classes += ' -range-from-';\n          if (dp.isSame(maxRange, date, type)) classes += ' -range-to-';\n\n          if (parent.selectedDates.length == 1 && parent.focused) {\n            if (dp.bigger(minRange, date) && dp.less(parent.focused, date) || dp.less(maxRange, date) && dp.bigger(parent.focused, date)) {\n              classes += ' -in-range-';\n            }\n\n            if (dp.less(maxRange, date) && dp.isSame(parent.focused, date)) {\n              classes += ' -range-from-';\n            }\n\n            if (dp.bigger(minRange, date) && dp.isSame(parent.focused, date)) {\n              classes += ' -range-to-';\n            }\n          } else if (parent.selectedDates.length == 2) {\n            if (dp.bigger(minRange, date) && dp.less(maxRange, date)) {\n              classes += ' -in-range-';\n            }\n          }\n        }\n\n        if (dp.isSame(currentDate, date, type)) classes += ' -current-';\n        if (parent.focused && dp.isSame(date, parent.focused, type)) classes += ' -focus-';\n        if (parent._isSelected(date, type)) classes += ' -selected-';\n        if (!parent._isInRange(date, type) || render.disabled) classes += ' -disabled-';\n        return {\n          html: html,\n          classes: classes\n        };\n      },\n\n      /**\n       * Calculates days number to render. Generates days html and returns it.\n       * @param {object} date - Date object\n       * @returns {string}\n       * @private\n       */\n      _getDaysHtml: function _getDaysHtml(date) {\n        var totalMonthDays = dp.getDaysCount(date),\n            firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay(),\n            lastMonthDay = new Date(date.getFullYear(), date.getMonth(), totalMonthDays).getDay(),\n            daysFromPevMonth = firstMonthDay - this.d.loc.firstDay,\n            daysFromNextMonth = 6 - lastMonthDay + this.d.loc.firstDay;\n        daysFromPevMonth = daysFromPevMonth < 0 ? daysFromPevMonth + 7 : daysFromPevMonth;\n        daysFromNextMonth = daysFromNextMonth > 6 ? daysFromNextMonth - 7 : daysFromNextMonth;\n        var startDayIndex = -daysFromPevMonth + 1,\n            m,\n            y,\n            html = '';\n\n        for (var i = startDayIndex, max = totalMonthDays + daysFromNextMonth; i <= max; i++) {\n          y = date.getFullYear();\n          m = date.getMonth();\n          html += this._getDayHtml(new Date(y, m, i));\n        }\n\n        return html;\n      },\n      _getDayHtml: function _getDayHtml(date) {\n        var content = this._getCellContents(date, 'day');\n\n        return '<div class=\"' + content.classes + '\" ' + 'data-date=\"' + date.getDate() + '\" ' + 'data-month=\"' + date.getMonth() + '\" ' + 'data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>';\n      },\n\n      /**\n       * Generates months html\n       * @param {object} date - date instance\n       * @returns {string}\n       * @private\n       */\n      _getMonthsHtml: function _getMonthsHtml(date) {\n        var html = '',\n            d = dp.getParsedDate(date),\n            i = 0;\n\n        while (i < 12) {\n          html += this._getMonthHtml(new Date(d.year, i));\n          i++;\n        }\n\n        return html;\n      },\n      _getMonthHtml: function _getMonthHtml(date) {\n        var content = this._getCellContents(date, 'month');\n\n        return '<div class=\"' + content.classes + '\" data-month=\"' + date.getMonth() + '\">' + content.html + '</div>';\n      },\n      _getYearsHtml: function _getYearsHtml(date) {\n        var d = dp.getParsedDate(date),\n            decade = dp.getDecade(date),\n            firstYear = decade[0] - 1,\n            html = '',\n            i = firstYear;\n\n        for (i; i <= decade[1] + 1; i++) {\n          html += this._getYearHtml(new Date(i, 0));\n        }\n\n        return html;\n      },\n      _getYearHtml: function _getYearHtml(date) {\n        var content = this._getCellContents(date, 'year');\n\n        return '<div class=\"' + content.classes + '\" data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>';\n      },\n      _renderTypes: {\n        days: function days() {\n          var dayNames = this._getDayNamesHtml(this.d.loc.firstDay),\n              days = this._getDaysHtml(this.d.currentDate);\n\n          this.$cells.html(days);\n          this.$names.html(dayNames);\n        },\n        months: function months() {\n          var html = this._getMonthsHtml(this.d.currentDate);\n\n          this.$cells.html(html);\n        },\n        years: function years() {\n          var html = this._getYearsHtml(this.d.currentDate);\n\n          this.$cells.html(html);\n        }\n      },\n      _render: function _render() {\n        if (this.opts.onlyTimepicker) return;\n\n        this._renderTypes[this.type].bind(this)();\n      },\n      _update: function _update() {\n        var $cells = $('.datepicker--cell', this.$cells),\n            _this = this,\n            classes,\n            $cell,\n            date;\n\n        $cells.each(function (cell, i) {\n          $cell = $(this);\n          date = _this.d._getDateFromCell($(this));\n          classes = _this._getCellContents(date, _this.d.cellType);\n          $cell.attr('class', classes.classes);\n        });\n      },\n      show: function show() {\n        if (this.opts.onlyTimepicker) return;\n        this.$el.addClass('active');\n        this.acitve = true;\n      },\n      hide: function hide() {\n        this.$el.removeClass('active');\n        this.active = false;\n      },\n      //  Events\n      // -------------------------------------------------\n      _handleClick: function _handleClick(el) {\n        var date = el.data('date') || 1,\n            month = el.data('month') || 0,\n            year = el.data('year') || this.d.parsedDate.year,\n            dp = this.d; // Change view if min view does not reach yet\n\n        if (dp.view != this.opts.minView) {\n          dp.down(new Date(year, month, date));\n          return;\n        } // Select date if min view is reached\n\n\n        var selectedDate = new Date(year, month, date),\n            alreadySelected = this.d._isSelected(selectedDate, this.d.cellType);\n\n        if (!alreadySelected) {\n          dp._trigger('clickCell', selectedDate);\n\n          return;\n        }\n\n        dp._handleAlreadySelectedDates.bind(dp, alreadySelected, selectedDate)();\n      },\n      _onClickCell: function _onClickCell(e) {\n        var $el = $(e.target).closest('.datepicker--cell');\n        if ($el.hasClass('-disabled-')) return;\n\n        this._handleClick.bind(this)($el);\n      }\n    };\n  })();\n\n  ;\n\n  (function () {\n    var template = '' + '<div class=\"datepicker--nav-action\" data-action=\"prev\">#{prevHtml}</div>' + '<div class=\"datepicker--nav-title\">#{title}</div>' + '<div class=\"datepicker--nav-action\" data-action=\"next\">#{nextHtml}</div>',\n        buttonsContainerTemplate = '<div class=\"datepicker--buttons\"></div>',\n        button = '<span class=\"datepicker--button\" data-action=\"#{action}\">#{label}</span>',\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Navigation = function (d, opts) {\n      this.d = d;\n      this.opts = opts;\n      this.$buttonsContainer = '';\n      this.init();\n    };\n\n    datepicker.Navigation.prototype = {\n      init: function init() {\n        this._buildBaseHtml();\n\n        this._bindEvents();\n      },\n      _bindEvents: function _bindEvents() {\n        this.d.$nav.on('click', '.datepicker--nav-action', $.proxy(this._onClickNavButton, this));\n        this.d.$nav.on('click', '.datepicker--nav-title', $.proxy(this._onClickNavTitle, this));\n        this.d.$datepicker.on('click', '.datepicker--button', $.proxy(this._onClickNavButton, this));\n      },\n      _buildBaseHtml: function _buildBaseHtml() {\n        if (!this.opts.onlyTimepicker) {\n          this._render();\n        }\n\n        this._addButtonsIfNeed();\n      },\n      _addButtonsIfNeed: function _addButtonsIfNeed() {\n        if (this.opts.todayButton) {\n          this._addButton('today');\n        }\n\n        if (this.opts.clearButton) {\n          this._addButton('clear');\n        }\n      },\n      _render: function _render() {\n        var title = this._getTitle(this.d.currentDate),\n            html = dp.template(template, $.extend({\n          title: title\n        }, this.opts));\n\n        this.d.$nav.html(html);\n\n        if (this.d.view == 'years') {\n          $('.datepicker--nav-title', this.d.$nav).addClass('-disabled-');\n        }\n\n        this.setNavStatus();\n      },\n      _getTitle: function _getTitle(date) {\n        return this.d.formatDate(this.opts.navTitles[this.d.view], date);\n      },\n      _addButton: function _addButton(type) {\n        if (!this.$buttonsContainer.length) {\n          this._addButtonsContainer();\n        }\n\n        var data = {\n          action: type,\n          label: this.d.loc[type]\n        },\n            html = dp.template(button, data);\n        if ($('[data-action=' + type + ']', this.$buttonsContainer).length) return;\n        this.$buttonsContainer.append(html);\n      },\n      _addButtonsContainer: function _addButtonsContainer() {\n        this.d.$datepicker.append(buttonsContainerTemplate);\n        this.$buttonsContainer = $('.datepicker--buttons', this.d.$datepicker);\n      },\n      setNavStatus: function setNavStatus() {\n        if (!(this.opts.minDate || this.opts.maxDate) || !this.opts.disableNavWhenOutOfRange) return;\n        var date = this.d.parsedDate,\n            m = date.month,\n            y = date.year,\n            d = date.date;\n\n        switch (this.d.view) {\n          case 'days':\n            if (!this.d._isInRange(new Date(y, m - 1, 1), 'month')) {\n              this._disableNav('prev');\n            }\n\n            if (!this.d._isInRange(new Date(y, m + 1, 1), 'month')) {\n              this._disableNav('next');\n            }\n\n            break;\n\n          case 'months':\n            if (!this.d._isInRange(new Date(y - 1, m, d), 'year')) {\n              this._disableNav('prev');\n            }\n\n            if (!this.d._isInRange(new Date(y + 1, m, d), 'year')) {\n              this._disableNav('next');\n            }\n\n            break;\n\n          case 'years':\n            var decade = dp.getDecade(this.d.date);\n\n            if (!this.d._isInRange(new Date(decade[0] - 1, 0, 1), 'year')) {\n              this._disableNav('prev');\n            }\n\n            if (!this.d._isInRange(new Date(decade[1] + 1, 0, 1), 'year')) {\n              this._disableNav('next');\n            }\n\n            break;\n        }\n      },\n      _disableNav: function _disableNav(nav) {\n        $('[data-action=\"' + nav + '\"]', this.d.$nav).addClass('-disabled-');\n      },\n      _activateNav: function _activateNav(nav) {\n        $('[data-action=\"' + nav + '\"]', this.d.$nav).removeClass('-disabled-');\n      },\n      _onClickNavButton: function _onClickNavButton(e) {\n        var $el = $(e.target).closest('[data-action]'),\n            action = $el.data('action');\n        this.d[action]();\n      },\n      _onClickNavTitle: function _onClickNavTitle(e) {\n        if ($(e.target).hasClass('-disabled-')) return;\n\n        if (this.d.view == 'days') {\n          return this.d.view = 'months';\n        }\n\n        this.d.view = 'years';\n      }\n    };\n  })();\n\n  ;\n\n  (function () {\n    var template = '<div class=\"datepicker--time\">' + '<div class=\"datepicker--time-current\">' + '   <span class=\"datepicker--time-current-hours\">#{hourVisible}</span>' + '   <span class=\"datepicker--time-current-colon\">:</span>' + '   <span class=\"datepicker--time-current-minutes\">#{minValue}</span>' + '</div>' + '<div class=\"datepicker--time-sliders\">' + '   <div class=\"datepicker--time-row\">' + '      <input type=\"range\" name=\"hours\" value=\"#{hourValue}\" min=\"#{hourMin}\" max=\"#{hourMax}\" step=\"#{hourStep}\"/>' + '   </div>' + '   <div class=\"datepicker--time-row\">' + '      <input type=\"range\" name=\"minutes\" value=\"#{minValue}\" min=\"#{minMin}\" max=\"#{minMax}\" step=\"#{minStep}\"/>' + '   </div>' + '</div>' + '</div>',\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Timepicker = function (inst, opts) {\n      this.d = inst;\n      this.opts = opts;\n      this.init();\n    };\n\n    datepicker.Timepicker.prototype = {\n      init: function init() {\n        var input = 'input';\n\n        this._setTime(this.d.date);\n\n        this._buildHTML();\n\n        if (navigator.userAgent.match(/trident/gi)) {\n          input = 'change';\n        }\n\n        this.d.$el.on('selectDate', this._onSelectDate.bind(this));\n        this.$ranges.on(input, this._onChangeRange.bind(this));\n        this.$ranges.on('mouseup', this._onMouseUpRange.bind(this));\n        this.$ranges.on('mousemove focus ', this._onMouseEnterRange.bind(this));\n        this.$ranges.on('mouseout blur', this._onMouseOutRange.bind(this));\n      },\n      _setTime: function _setTime(date) {\n        var _date = dp.getParsedDate(date);\n\n        this._handleDate(date);\n\n        this.hours = _date.hours < this.minHours ? this.minHours : _date.hours;\n        this.minutes = _date.minutes < this.minMinutes ? this.minMinutes : _date.minutes;\n      },\n\n      /**\n       * Sets minHours and minMinutes from date (usually it's a minDate)\n       * Also changes minMinutes if current hours are bigger then @date hours\n       * @param date {Date}\n       * @private\n       */\n      _setMinTimeFromDate: function _setMinTimeFromDate(date) {\n        this.minHours = date.getHours();\n        this.minMinutes = date.getMinutes(); // If, for example, min hours are 10, and current hours are 12,\n        // update minMinutes to default value, to be able to choose whole range of values\n\n        if (this.d.lastSelectedDate) {\n          if (this.d.lastSelectedDate.getHours() > date.getHours()) {\n            this.minMinutes = this.opts.minMinutes;\n          }\n        }\n      },\n      _setMaxTimeFromDate: function _setMaxTimeFromDate(date) {\n        this.maxHours = date.getHours();\n        this.maxMinutes = date.getMinutes();\n\n        if (this.d.lastSelectedDate) {\n          if (this.d.lastSelectedDate.getHours() < date.getHours()) {\n            this.maxMinutes = this.opts.maxMinutes;\n          }\n        }\n      },\n      _setDefaultMinMaxTime: function _setDefaultMinMaxTime() {\n        var maxHours = 23,\n            maxMinutes = 59,\n            opts = this.opts;\n        this.minHours = opts.minHours < 0 || opts.minHours > maxHours ? 0 : opts.minHours;\n        this.minMinutes = opts.minMinutes < 0 || opts.minMinutes > maxMinutes ? 0 : opts.minMinutes;\n        this.maxHours = opts.maxHours < 0 || opts.maxHours > maxHours ? maxHours : opts.maxHours;\n        this.maxMinutes = opts.maxMinutes < 0 || opts.maxMinutes > maxMinutes ? maxMinutes : opts.maxMinutes;\n      },\n\n      /**\n       * Looks for min/max hours/minutes and if current values\n       * are out of range sets valid values.\n       * @private\n       */\n      _validateHoursMinutes: function _validateHoursMinutes(date) {\n        if (this.hours < this.minHours) {\n          this.hours = this.minHours;\n        } else if (this.hours > this.maxHours) {\n          this.hours = this.maxHours;\n        }\n\n        if (this.minutes < this.minMinutes) {\n          this.minutes = this.minMinutes;\n        } else if (this.minutes > this.maxMinutes) {\n          this.minutes = this.maxMinutes;\n        }\n      },\n      _buildHTML: function _buildHTML() {\n        var lz = dp.getLeadingZeroNum,\n            data = {\n          hourMin: this.minHours,\n          hourMax: lz(this.maxHours),\n          hourStep: this.opts.hoursStep,\n          hourValue: this.hours,\n          hourVisible: lz(this.displayHours),\n          minMin: this.minMinutes,\n          minMax: lz(this.maxMinutes),\n          minStep: this.opts.minutesStep,\n          minValue: lz(this.minutes)\n        },\n            _template = dp.template(template, data);\n\n        this.$timepicker = $(_template).appendTo(this.d.$datepicker);\n        this.$ranges = $('[type=\"range\"]', this.$timepicker);\n        this.$hours = $('[name=\"hours\"]', this.$timepicker);\n        this.$minutes = $('[name=\"minutes\"]', this.$timepicker);\n        this.$hoursText = $('.datepicker--time-current-hours', this.$timepicker);\n        this.$minutesText = $('.datepicker--time-current-minutes', this.$timepicker);\n\n        if (this.d.ampm) {\n          this.$ampm = $('<span class=\"datepicker--time-current-ampm\">').appendTo($('.datepicker--time-current', this.$timepicker)).html(this.dayPeriod);\n          this.$timepicker.addClass('-am-pm-');\n        }\n      },\n      _updateCurrentTime: function _updateCurrentTime() {\n        var h = dp.getLeadingZeroNum(this.displayHours),\n            m = dp.getLeadingZeroNum(this.minutes);\n        this.$hoursText.html(h);\n        this.$minutesText.html(m);\n\n        if (this.d.ampm) {\n          this.$ampm.html(this.dayPeriod);\n        }\n      },\n      _updateRanges: function _updateRanges() {\n        this.$hours.attr({\n          min: this.minHours,\n          max: this.maxHours\n        }).val(this.hours);\n        this.$minutes.attr({\n          min: this.minMinutes,\n          max: this.maxMinutes\n        }).val(this.minutes);\n      },\n\n      /**\n       * Sets minHours, minMinutes etc. from date. If date is not passed, than sets\n       * values from options\n       * @param [date] {object} - Date object, to get values from\n       * @private\n       */\n      _handleDate: function _handleDate(date) {\n        this._setDefaultMinMaxTime();\n\n        if (date) {\n          if (dp.isSame(date, this.d.opts.minDate)) {\n            this._setMinTimeFromDate(this.d.opts.minDate);\n          } else if (dp.isSame(date, this.d.opts.maxDate)) {\n            this._setMaxTimeFromDate(this.d.opts.maxDate);\n          }\n        }\n\n        this._validateHoursMinutes(date);\n      },\n      update: function update() {\n        this._updateRanges();\n\n        this._updateCurrentTime();\n      },\n\n      /**\n       * Calculates valid hour value to display in text input and datepicker's body.\n       * @param date {Date|Number} - date or hours\n       * @param [ampm] {Boolean} - 12 hours mode\n       * @returns {{hours: *, dayPeriod: string}}\n       * @private\n       */\n      _getValidHoursFromDate: function _getValidHoursFromDate(date, ampm) {\n        var d = date,\n            hours = date;\n\n        if (date instanceof Date) {\n          d = dp.getParsedDate(date);\n          hours = d.hours;\n        }\n\n        var _ampm = ampm || this.d.ampm,\n            dayPeriod = 'am';\n\n        if (_ampm) {\n          switch (true) {\n            case hours == 0:\n              hours = 12;\n              break;\n\n            case hours == 12:\n              dayPeriod = 'pm';\n              break;\n\n            case hours > 11:\n              hours = hours - 12;\n              dayPeriod = 'pm';\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        return {\n          hours: hours,\n          dayPeriod: dayPeriod\n        };\n      },\n\n      set hours(val) {\n        this._hours = val;\n\n        var displayHours = this._getValidHoursFromDate(val);\n\n        this.displayHours = displayHours.hours;\n        this.dayPeriod = displayHours.dayPeriod;\n      },\n\n      get hours() {\n        return this._hours;\n      },\n\n      //  Events\n      // -------------------------------------------------\n      _onChangeRange: function _onChangeRange(e) {\n        var $target = $(e.target),\n            name = $target.attr('name');\n        this.d.timepickerIsActive = true;\n        this[name] = $target.val();\n\n        this._updateCurrentTime();\n\n        this.d._trigger('timeChange', [this.hours, this.minutes]);\n\n        this._handleDate(this.d.lastSelectedDate);\n\n        this.update();\n      },\n      _onSelectDate: function _onSelectDate(e, data) {\n        this._handleDate(data);\n\n        this.update();\n      },\n      _onMouseEnterRange: function _onMouseEnterRange(e) {\n        var name = $(e.target).attr('name');\n        $('.datepicker--time-current-' + name, this.$timepicker).addClass('-focus-');\n      },\n      _onMouseOutRange: function _onMouseOutRange(e) {\n        var name = $(e.target).attr('name');\n        if (this.d.inFocus) return; // Prevent removing focus when mouse out of range slider\n\n        $('.datepicker--time-current-' + name, this.$timepicker).removeClass('-focus-');\n      },\n      _onMouseUpRange: function _onMouseUpRange(e) {\n        this.d.timepickerIsActive = false;\n      }\n    };\n  })();\n})(window, jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(0)))\n\n//# sourceURL=webpack:///./vendors/datepicker/datepicker.js?")},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(9);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./vendors/datepicker/css/datepicker.scss?")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./vendors/datepicker/css/datepicker.scss?../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js??ref--7-2!../node_modules/postcss-loader/src??ref--7-3!../node_modules/sass-loader/lib/loader.js??ref--7-4")},function(module,exports){eval("document.addEventListener('DOMContentLoaded', function () {\n  var el = document.querySelectorAll('.dropdown-main__svg');\n  var el2 = document.querySelectorAll('.dropdown-list'); //---------------------------------Скрытие\\раскрытие dropdawn\n\n  var _loop = function _loop(i) {\n    el[i].addEventListener(\"click\", function () {\n      el2[i].classList.toggle(\"dropdown-list--expanded\");\n    });\n  };\n\n  for (var i = 0; i < el.length; i++) {\n    _loop(i);\n  } //---------------------------------Кнопки +\\-\n\n\n  var DropdownItems = document.querySelectorAll('.item-value'); //console.log(items.length)\n\n  for (var i = 0; i < DropdownItems.length; i++) {\n    DropdownItems[i].addEventListener(\"click\", function (event) {\n      var target = event.target,\n          // где был клик?\n      value = this.querySelector('.dropdown-item__value').innerHTML;\n      if (target.tagName != 'svg') return; // не на TD? тогда не интересует\n      //console.log('target = '+target);\n\n      if (target.classList == 'minusBtn') {\n        //console.log('minusBtn !');\n        if (value > 0) {\n          value--;\n          this.querySelector('.dropdown-item__value').innerHTML = value;\n        }\n      }\n\n      if (target.classList == 'plusBtn') {\n        value++;\n        this.querySelector('.dropdown-item__value').innerHTML = value; //console.log('plusBtn !');\n      }\n    });\n  } //-----------------------------------------Главный функционал\n\n\n  var Dropdowns = document.querySelectorAll('.dropdown-wrp');\n\n  for (var _i = 0; _i < Dropdowns.length; _i++) {\n    Dropdowns[_i].addEventListener('click', function (event) {\n      var a = this.querySelectorAll('.dropdown-item__value'),\n          p = this.querySelector('.dropdown-main'),\n          ApplyBtnJob = this.querySelector('.dropdown-list'),\n          value = Number(a[0].innerHTML) + Number(a[1].innerHTML) + Number(a[2].innerHTML);\n\n      if (this.classList.contains(\"dropdown-company\")) {\n        var CleanBtn = this.querySelector('.dropdown-item__clean'),\n            ApplyBtn = this.querySelector('.dropdown-item__apply');\n        if (value != 0) CleanBtn.classList.remove('dropdown-item__clean--disable');\n        if (value == 0) p.innerHTML = 'Cколько гостей';else if (value == 1) p.innerHTML = '1 гость';else p.innerHTML = value + ' гостей';\n\n        if (event.target.classList == 'dropdown-item__clean') {\n          CleanBtn.onclick = function () {\n            value = 0, a[0].innerHTML = 0, a[1].innerHTML = 0, a[2].innerHTML = 0;\n            p.innerHTML = 'Сколько гостей';\n            this.classList.add('dropdown-item__clean--disable');\n          };\n        }\n\n        ApplyBtn.onclick = function () {\n          ApplyBtnJob.classList.toggle(\"dropdown-list--expanded\");\n        };\n      }\n\n      if (this.classList.contains(\"dropdown-comfort\")) {\n        var Bedroom = this.querySelector('#bedroom'),\n            Bed = this.querySelector('#bed'),\n            Bathroom = this.querySelector('#bathroom');\n\n        if (event.target.classList == 'plusBtn' || event.target.classList == 'minusBtn') {\n          p.innerHTML = Bedroom.innerHTML + ' спальни, ' + Bed.innerHTML + ' кровати...';\n        } else return;\n      }\n    });\n  }\n});\n\n//# sourceURL=webpack:///./blocks/form_elements/dropdown/dropdown.js?")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function($) {document.addEventListener(\'DOMContentLoaded\', function () {\n  //import \'../../../vendors/datepicker/datepicker\'\n  $(\'.datepicker-here\').datepicker({\n    range: true,\n    minDate: new Date(),\n    toggleSelected: false,\n    //clearButton: true,\n    navTitles: {\n      days: \'MM yyyy\'\n    },\n    prevHtml: \'<svg width="17" height="18" viewBox="0 0 17 18" fill="none"><path d="M16.1755 8.01562V9.98438H3.98801L9.56613 15.6094L8.15988 17.0156L0.144258 9L8.15988 0.984375L9.56613 2.39062L3.98801 8.01562H16.1755Z" fill="#BC9CFF"/></svg>\',\n    nextHtml: \'<svg width="17" height="18" viewBox="0 0 17 18" fill="none"><path d="M8.36301 0.984375L16.3786 9L8.36301 17.0156L6.95676 15.6094L12.5349 9.98438H0.347383V8.01562H12.5349L6.95676 2.39062L8.36301 0.984375Z" fill="#BC9CFF"/></svg>\'\n  }); //------------------------------------------\n\n  var dateBtns = document.querySelectorAll(\'.date-dropdawn__svg\'),\n      filterDate = document.querySelectorAll(\'.date-wrp\'),\n      RangeFilterDate = document.querySelectorAll(\'.date__search-wrp\'),\n      fff = function fff(event) {\n    var target = event.target,\n        // где был клик?\n    calendar = this.querySelector(\'.datepicker-here\'),\n        myDatepicker = $(\'.datepicker-here\').data(\'datepicker\');\n    var rangeFrom = new Date(myDatepicker.selectedDates[0]),\n        rangeTo = new Date(myDatepicker.selectedDates[1]),\n        options = {\n      day: \'numeric\',\n      month: \'numeric\',\n      year: \'numeric\'\n    },\n        options2 = {\n      day: \'numeric\',\n      month: \'short\'\n    };\n\n    if (target.classList == \'date-dropdawn__svg\') {\n      //кнопка стрелочка открыть\n      calendar.classList.toggle("datepicker--disable"); //console.log(\' this  - \' + this)\n    } else if (target.classList == \'date__clean\') {\n      //кнопка очистки\n      //myDatepicker.show();\n      myDatepicker.clear();\n\n      if (this.querySelector("#date__prib") && this.querySelector("#date__viezd")) {\n        this.querySelector("#date__prib").value = \'\';\n        this.querySelector("#date__viezd").value = \'\';\n      }\n    } else if (target.classList == \'date__apply\') {\n      //кнопка применить\n      //console.log(\'selectedDates   \' + myDatepicker.selectedDates[0] +\'       \' + myDatepicker.selectedDates[1] );\n      if (this.querySelector(".-range-from-") && this.querySelector(".-range-to-")) {\n        console.log(\' rangeFrom = \' + rangeFrom + \'  rangeTo =\' + rangeTo);\n\n        if (this.querySelector("#date__prib") && this.querySelector("#date__viezd")) {\n          this.querySelector("#date__prib").value = rangeFrom.toLocaleString("ru", options);\n          this.querySelector("#date__viezd").value = rangeTo.toLocaleString("ru", options);\n        } else if (this.querySelector(".date__info")) {\n          this.querySelector(".date__info-start").innerHTML = rangeFrom.toLocaleString("ru", options2) + \' \';\n          this.querySelector(".date__info-end").innerHTML = rangeTo.toLocaleString("ru", options2); //console.log(\' rangeFrom  \' + rangeFrom.toLocaleString("ru", options2))\n        }\n      }\n\n      calendar.classList.toggle("datepicker--disable");\n    } else {\n      return;\n    }\n  };\n\n  for (var i = 0; i < filterDate.length; i++) {\n    filterDate[i].addEventListener(\'click\', fff);\n  }\n\n  for (var _i = 0; _i < RangeFilterDate.length; _i++) {\n    RangeFilterDate[_i].addEventListener(\'click\', fff);\n  }\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(0)))\n\n//# sourceURL=webpack:///./blocks/form_elements/date/date.js?')},function(module,exports){eval("document.addEventListener('DOMContentLoaded', function () {\n  var likes = document.querySelectorAll(\".like-wrp\");\n\n  for (var i = 0; i < likes.length; i++) {\n    likes[i].addEventListener('click', function (event) {\n      var value = this.querySelector('.like-value').innerHTML;\n      if (this.classList.contains('heart--liked')) value--;else value++;\n      this.querySelector('.like-value').innerHTML = value;\n      this.classList.toggle('heart--liked');\n    });\n  }\n});\n\n//# sourceURL=webpack:///./blocks/form_elements/like/like.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _vendors_jquery_ui_1_12_1_custom_jquery_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);\n/* harmony import */ var _vendors_jquery_ui_1_12_1_custom_jquery_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendors_jquery_ui_1_12_1_custom_jquery_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _vendors_jquery_ui_1_12_1_custom_jquery_ui_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);\n/* harmony import */ var _vendors_jquery_ui_1_12_1_custom_jquery_ui_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vendors_jquery_ui_1_12_1_custom_jquery_ui_css__WEBPACK_IMPORTED_MODULE_1__);\n\n\n$(function () {\n  var qqq = function qqq(event, ui) {\n    var rangeStart = $("#slider").slider("values", 0),\n        rangeEnd = $("#slider").slider("values", 1);\n    $("#range-start").html(rangeStart);\n    $("#range-end").html(rangeEnd);\n  };\n\n  $("#slider").slider({\n    range: true,\n    min: 0,\n    max: 15000,\n    values: [5000, 10000],\n    step: 100,\n    slide: function slide(event, ui) {\n      $("#amount").val("$" + ui.values[0] + " - $" + ui.values[1]);\n      qqq();\n    },\n    change: qqq\n  });\n  $("#amount").val("$" + $("#slider-range").slider("values", 0) + " - $" + $("#slider-range").slider("values", 1)); //------------------------------\n  //console.log(\'SLIDER JS \')\n  //$("#range-start").click\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(0)))\n\n//# sourceURL=webpack:///./blocks/form_elements/slider/slider.js?')},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery UI - v1.12.1 - 2019-05-27\n* http://jqueryui.com\n* Includes: widget.js, keycode.js, widgets/mouse.js, widgets/slider.js\n* Copyright jQuery Foundation and other contributors; Licensed MIT */\n(function (factory) {\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function ($) {\n  $.ui = $.ui || {};\n  var version = $.ui.version = "1.12.1";\n  /*!\n   * jQuery UI Widget 1.12.1\n   * http://jqueryui.com\n   *\n   * Copyright jQuery Foundation and other contributors\n   * Released under the MIT license.\n   * http://jquery.org/license\n   */\n  //>>label: Widget\n  //>>group: Core\n  //>>description: Provides a factory for creating stateful widgets with a common API.\n  //>>docs: http://api.jqueryui.com/jQuery.widget/\n  //>>demos: http://jqueryui.com/widget/\n\n  var widgetUuid = 0;\n  var widgetSlice = Array.prototype.slice;\n\n  $.cleanData = function (orig) {\n    return function (elems) {\n      var events, elem, i;\n\n      for (i = 0; (elem = elems[i]) != null; i++) {\n        try {\n          // Only trigger remove when necessary to save time\n          events = $._data(elem, "events");\n\n          if (events && events.remove) {\n            $(elem).triggerHandler("remove");\n          } // Http://bugs.jquery.com/ticket/8235\n\n        } catch (e) {}\n      }\n\n      orig(elems);\n    };\n  }($.cleanData);\n\n  $.widget = function (name, base, prototype) {\n    var existingConstructor, constructor, basePrototype; // ProxiedPrototype allows the provided prototype to remain unmodified\n    // so that it can be used as a mixin for multiple widgets (#8876)\n\n    var proxiedPrototype = {};\n    var namespace = name.split(".")[0];\n    name = name.split(".")[1];\n    var fullName = namespace + "-" + name;\n\n    if (!prototype) {\n      prototype = base;\n      base = $.Widget;\n    }\n\n    if ($.isArray(prototype)) {\n      prototype = $.extend.apply(null, [{}].concat(prototype));\n    } // Create selector for plugin\n\n\n    $.expr[":"][fullName.toLowerCase()] = function (elem) {\n      return !!$.data(elem, fullName);\n    };\n\n    $[namespace] = $[namespace] || {};\n    existingConstructor = $[namespace][name];\n\n    constructor = $[namespace][name] = function (options, element) {\n      // Allow instantiation without "new" keyword\n      if (!this._createWidget) {\n        return new constructor(options, element);\n      } // Allow instantiation without initializing for simple inheritance\n      // must use "new" keyword (the code above always passes args)\n\n\n      if (arguments.length) {\n        this._createWidget(options, element);\n      }\n    }; // Extend with the existing constructor to carry over any static properties\n\n\n    $.extend(constructor, existingConstructor, {\n      version: prototype.version,\n      // Copy the object used to create the prototype in case we need to\n      // redefine the widget later\n      _proto: $.extend({}, prototype),\n      // Track widgets that inherit from this widget in case this widget is\n      // redefined after a widget inherits from it\n      _childConstructors: []\n    });\n    basePrototype = new base(); // We need to make the options hash a property directly on the new instance\n    // otherwise we\'ll modify the options hash on the prototype that we\'re\n    // inheriting from\n\n    basePrototype.options = $.widget.extend({}, basePrototype.options);\n    $.each(prototype, function (prop, value) {\n      if (!$.isFunction(value)) {\n        proxiedPrototype[prop] = value;\n        return;\n      }\n\n      proxiedPrototype[prop] = function () {\n        function _super() {\n          return base.prototype[prop].apply(this, arguments);\n        }\n\n        function _superApply(args) {\n          return base.prototype[prop].apply(this, args);\n        }\n\n        return function () {\n          var __super = this._super;\n          var __superApply = this._superApply;\n          var returnValue;\n          this._super = _super;\n          this._superApply = _superApply;\n          returnValue = value.apply(this, arguments);\n          this._super = __super;\n          this._superApply = __superApply;\n          return returnValue;\n        };\n      }();\n    });\n    constructor.prototype = $.widget.extend(basePrototype, {\n      // TODO: remove support for widgetEventPrefix\n      // always use the name + a colon as the prefix, e.g., draggable:start\n      // don\'t prefix for widgets that aren\'t DOM-based\n      widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix || name : name\n    }, proxiedPrototype, {\n      constructor: constructor,\n      namespace: namespace,\n      widgetName: name,\n      widgetFullName: fullName\n    }); // If this widget is being redefined then we need to find all widgets that\n    // are inheriting from it and redefine all of them so that they inherit from\n    // the new version of this widget. We\'re essentially trying to replace one\n    // level in the prototype chain.\n\n    if (existingConstructor) {\n      $.each(existingConstructor._childConstructors, function (i, child) {\n        var childPrototype = child.prototype; // Redefine the child widget using the same prototype that was\n        // originally used, but inherit from the new version of the base\n\n        $.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto);\n      }); // Remove the list of existing child constructors from the old constructor\n      // so the old child constructors can be garbage collected\n\n      delete existingConstructor._childConstructors;\n    } else {\n      base._childConstructors.push(constructor);\n    }\n\n    $.widget.bridge(name, constructor);\n    return constructor;\n  };\n\n  $.widget.extend = function (target) {\n    var input = widgetSlice.call(arguments, 1);\n    var inputIndex = 0;\n    var inputLength = input.length;\n    var key;\n    var value;\n\n    for (; inputIndex < inputLength; inputIndex++) {\n      for (key in input[inputIndex]) {\n        value = input[inputIndex][key];\n\n        if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {\n          // Clone objects\n          if ($.isPlainObject(value)) {\n            target[key] = $.isPlainObject(target[key]) ? $.widget.extend({}, target[key], value) : // Don\'t extend strings, arrays, etc. with objects\n            $.widget.extend({}, value); // Copy everything else by reference\n          } else {\n            target[key] = value;\n          }\n        }\n      }\n    }\n\n    return target;\n  };\n\n  $.widget.bridge = function (name, object) {\n    var fullName = object.prototype.widgetFullName || name;\n\n    $.fn[name] = function (options) {\n      var isMethodCall = typeof options === "string";\n      var args = widgetSlice.call(arguments, 1);\n      var returnValue = this;\n\n      if (isMethodCall) {\n        // If this is an empty collection, we need to have the instance method\n        // return undefined instead of the jQuery instance\n        if (!this.length && options === "instance") {\n          returnValue = undefined;\n        } else {\n          this.each(function () {\n            var methodValue;\n            var instance = $.data(this, fullName);\n\n            if (options === "instance") {\n              returnValue = instance;\n              return false;\n            }\n\n            if (!instance) {\n              return $.error("cannot call methods on " + name + " prior to initialization; " + "attempted to call method \'" + options + "\'");\n            }\n\n            if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {\n              return $.error("no such method \'" + options + "\' for " + name + " widget instance");\n            }\n\n            methodValue = instance[options].apply(instance, args);\n\n            if (methodValue !== instance && methodValue !== undefined) {\n              returnValue = methodValue && methodValue.jquery ? returnValue.pushStack(methodValue.get()) : methodValue;\n              return false;\n            }\n          });\n        }\n      } else {\n        // Allow multiple hashes to be passed on init\n        if (args.length) {\n          options = $.widget.extend.apply(null, [options].concat(args));\n        }\n\n        this.each(function () {\n          var instance = $.data(this, fullName);\n\n          if (instance) {\n            instance.option(options || {});\n\n            if (instance._init) {\n              instance._init();\n            }\n          } else {\n            $.data(this, fullName, new object(options, this));\n          }\n        });\n      }\n\n      return returnValue;\n    };\n  };\n\n  $.Widget = function ()\n  /* options, element */\n  {};\n\n  $.Widget._childConstructors = [];\n  $.Widget.prototype = {\n    widgetName: "widget",\n    widgetEventPrefix: "",\n    defaultElement: "<div>",\n    options: {\n      classes: {},\n      disabled: false,\n      // Callbacks\n      create: null\n    },\n    _createWidget: function _createWidget(options, element) {\n      element = $(element || this.defaultElement || this)[0];\n      this.element = $(element);\n      this.uuid = widgetUuid++;\n      this.eventNamespace = "." + this.widgetName + this.uuid;\n      this.bindings = $();\n      this.hoverable = $();\n      this.focusable = $();\n      this.classesElementLookup = {};\n\n      if (element !== this) {\n        $.data(element, this.widgetFullName, this);\n\n        this._on(true, this.element, {\n          remove: function remove(event) {\n            if (event.target === element) {\n              this.destroy();\n            }\n          }\n        });\n\n        this.document = $(element.style ? // Element within the document\n        element.ownerDocument : // Element is window or document\n        element.document || element);\n        this.window = $(this.document[0].defaultView || this.document[0].parentWindow);\n      }\n\n      this.options = $.widget.extend({}, this.options, this._getCreateOptions(), options);\n\n      this._create();\n\n      if (this.options.disabled) {\n        this._setOptionDisabled(this.options.disabled);\n      }\n\n      this._trigger("create", null, this._getCreateEventData());\n\n      this._init();\n    },\n    _getCreateOptions: function _getCreateOptions() {\n      return {};\n    },\n    _getCreateEventData: $.noop,\n    _create: $.noop,\n    _init: $.noop,\n    destroy: function destroy() {\n      var that = this;\n\n      this._destroy();\n\n      $.each(this.classesElementLookup, function (key, value) {\n        that._removeClass(value, key);\n      }); // We can probably remove the unbind calls in 2.0\n      // all event bindings should go through this._on()\n\n      this.element.off(this.eventNamespace).removeData(this.widgetFullName);\n      this.widget().off(this.eventNamespace).removeAttr("aria-disabled"); // Clean up events and states\n\n      this.bindings.off(this.eventNamespace);\n    },\n    _destroy: $.noop,\n    widget: function widget() {\n      return this.element;\n    },\n    option: function option(key, value) {\n      var options = key;\n      var parts;\n      var curOption;\n      var i;\n\n      if (arguments.length === 0) {\n        // Don\'t return a reference to the internal hash\n        return $.widget.extend({}, this.options);\n      }\n\n      if (typeof key === "string") {\n        // Handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }\n        options = {};\n        parts = key.split(".");\n        key = parts.shift();\n\n        if (parts.length) {\n          curOption = options[key] = $.widget.extend({}, this.options[key]);\n\n          for (i = 0; i < parts.length - 1; i++) {\n            curOption[parts[i]] = curOption[parts[i]] || {};\n            curOption = curOption[parts[i]];\n          }\n\n          key = parts.pop();\n\n          if (arguments.length === 1) {\n            return curOption[key] === undefined ? null : curOption[key];\n          }\n\n          curOption[key] = value;\n        } else {\n          if (arguments.length === 1) {\n            return this.options[key] === undefined ? null : this.options[key];\n          }\n\n          options[key] = value;\n        }\n      }\n\n      this._setOptions(options);\n\n      return this;\n    },\n    _setOptions: function _setOptions(options) {\n      var key;\n\n      for (key in options) {\n        this._setOption(key, options[key]);\n      }\n\n      return this;\n    },\n    _setOption: function _setOption(key, value) {\n      if (key === "classes") {\n        this._setOptionClasses(value);\n      }\n\n      this.options[key] = value;\n\n      if (key === "disabled") {\n        this._setOptionDisabled(value);\n      }\n\n      return this;\n    },\n    _setOptionClasses: function _setOptionClasses(value) {\n      var classKey, elements, currentElements;\n\n      for (classKey in value) {\n        currentElements = this.classesElementLookup[classKey];\n\n        if (value[classKey] === this.options.classes[classKey] || !currentElements || !currentElements.length) {\n          continue;\n        } // We are doing this to create a new jQuery object because the _removeClass() call\n        // on the next line is going to destroy the reference to the current elements being\n        // tracked. We need to save a copy of this collection so that we can add the new classes\n        // below.\n\n\n        elements = $(currentElements.get());\n\n        this._removeClass(currentElements, classKey); // We don\'t use _addClass() here, because that uses this.options.classes\n        // for generating the string of classes. We want to use the value passed in from\n        // _setOption(), this is the new value of the classes option which was passed to\n        // _setOption(). We pass this value directly to _classes().\n\n\n        elements.addClass(this._classes({\n          element: elements,\n          keys: classKey,\n          classes: value,\n          add: true\n        }));\n      }\n    },\n    _setOptionDisabled: function _setOptionDisabled(value) {\n      this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!value); // If the widget is becoming disabled, then nothing is interactive\n\n\n      if (value) {\n        this._removeClass(this.hoverable, null, "ui-state-hover");\n\n        this._removeClass(this.focusable, null, "ui-state-focus");\n      }\n    },\n    enable: function enable() {\n      return this._setOptions({\n        disabled: false\n      });\n    },\n    disable: function disable() {\n      return this._setOptions({\n        disabled: true\n      });\n    },\n    _classes: function _classes(options) {\n      var full = [];\n      var that = this;\n      options = $.extend({\n        element: this.element,\n        classes: this.options.classes || {}\n      }, options);\n\n      function processClassString(classes, checkOption) {\n        var current, i;\n\n        for (i = 0; i < classes.length; i++) {\n          current = that.classesElementLookup[classes[i]] || $();\n\n          if (options.add) {\n            current = $($.unique(current.get().concat(options.element.get())));\n          } else {\n            current = $(current.not(options.element).get());\n          }\n\n          that.classesElementLookup[classes[i]] = current;\n          full.push(classes[i]);\n\n          if (checkOption && options.classes[classes[i]]) {\n            full.push(options.classes[classes[i]]);\n          }\n        }\n      }\n\n      this._on(options.element, {\n        "remove": "_untrackClassesElement"\n      });\n\n      if (options.keys) {\n        processClassString(options.keys.match(/\\S+/g) || [], true);\n      }\n\n      if (options.extra) {\n        processClassString(options.extra.match(/\\S+/g) || []);\n      }\n\n      return full.join(" ");\n    },\n    _untrackClassesElement: function _untrackClassesElement(event) {\n      var that = this;\n      $.each(that.classesElementLookup, function (key, value) {\n        if ($.inArray(event.target, value) !== -1) {\n          that.classesElementLookup[key] = $(value.not(event.target).get());\n        }\n      });\n    },\n    _removeClass: function _removeClass(element, keys, extra) {\n      return this._toggleClass(element, keys, extra, false);\n    },\n    _addClass: function _addClass(element, keys, extra) {\n      return this._toggleClass(element, keys, extra, true);\n    },\n    _toggleClass: function _toggleClass(element, keys, extra, add) {\n      add = typeof add === "boolean" ? add : extra;\n      var shift = typeof element === "string" || element === null,\n          options = {\n        extra: shift ? keys : extra,\n        keys: shift ? element : keys,\n        element: shift ? this.element : element,\n        add: add\n      };\n      options.element.toggleClass(this._classes(options), add);\n      return this;\n    },\n    _on: function _on(suppressDisabledCheck, element, handlers) {\n      var delegateElement;\n      var instance = this; // No suppressDisabledCheck flag, shuffle arguments\n\n      if (typeof suppressDisabledCheck !== "boolean") {\n        handlers = element;\n        element = suppressDisabledCheck;\n        suppressDisabledCheck = false;\n      } // No element argument, shuffle and use this.element\n\n\n      if (!handlers) {\n        handlers = element;\n        element = this.element;\n        delegateElement = this.widget();\n      } else {\n        element = delegateElement = $(element);\n        this.bindings = this.bindings.add(element);\n      }\n\n      $.each(handlers, function (event, handler) {\n        function handlerProxy() {\n          // Allow widgets to customize the disabled handling\n          // - disabled as an array instead of boolean\n          // - disabled class as method for disabling individual parts\n          if (!suppressDisabledCheck && (instance.options.disabled === true || $(this).hasClass("ui-state-disabled"))) {\n            return;\n          }\n\n          return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments);\n        } // Copy the guid so direct unbinding works\n\n\n        if (typeof handler !== "string") {\n          handlerProxy.guid = handler.guid = handler.guid || handlerProxy.guid || $.guid++;\n        }\n\n        var match = event.match(/^([\\w:-]*)\\s*(.*)$/);\n        var eventName = match[1] + instance.eventNamespace;\n        var selector = match[2];\n\n        if (selector) {\n          delegateElement.on(eventName, selector, handlerProxy);\n        } else {\n          element.on(eventName, handlerProxy);\n        }\n      });\n    },\n    _off: function _off(element, eventName) {\n      eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;\n      element.off(eventName).off(eventName); // Clear the stack to avoid memory leaks (#10056)\n\n      this.bindings = $(this.bindings.not(element).get());\n      this.focusable = $(this.focusable.not(element).get());\n      this.hoverable = $(this.hoverable.not(element).get());\n    },\n    _delay: function _delay(handler, delay) {\n      function handlerProxy() {\n        return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments);\n      }\n\n      var instance = this;\n      return setTimeout(handlerProxy, delay || 0);\n    },\n    _hoverable: function _hoverable(element) {\n      this.hoverable = this.hoverable.add(element);\n\n      this._on(element, {\n        mouseenter: function mouseenter(event) {\n          this._addClass($(event.currentTarget), null, "ui-state-hover");\n        },\n        mouseleave: function mouseleave(event) {\n          this._removeClass($(event.currentTarget), null, "ui-state-hover");\n        }\n      });\n    },\n    _focusable: function _focusable(element) {\n      this.focusable = this.focusable.add(element);\n\n      this._on(element, {\n        focusin: function focusin(event) {\n          this._addClass($(event.currentTarget), null, "ui-state-focus");\n        },\n        focusout: function focusout(event) {\n          this._removeClass($(event.currentTarget), null, "ui-state-focus");\n        }\n      });\n    },\n    _trigger: function _trigger(type, event, data) {\n      var prop, orig;\n      var callback = this.options[type];\n      data = data || {};\n      event = $.Event(event);\n      event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase(); // The original event may come from any element\n      // so we need to reset the target on the new event\n\n      event.target = this.element[0]; // Copy original event properties over to the new event\n\n      orig = event.originalEvent;\n\n      if (orig) {\n        for (prop in orig) {\n          if (!(prop in event)) {\n            event[prop] = orig[prop];\n          }\n        }\n      }\n\n      this.element.trigger(event, data);\n      return !($.isFunction(callback) && callback.apply(this.element[0], [event].concat(data)) === false || event.isDefaultPrevented());\n    }\n  };\n  $.each({\n    show: "fadeIn",\n    hide: "fadeOut"\n  }, function (method, defaultEffect) {\n    $.Widget.prototype["_" + method] = function (element, options, callback) {\n      if (typeof options === "string") {\n        options = {\n          effect: options\n        };\n      }\n\n      var hasOptions;\n      var effectName = !options ? method : options === true || typeof options === "number" ? defaultEffect : options.effect || defaultEffect;\n      options = options || {};\n\n      if (typeof options === "number") {\n        options = {\n          duration: options\n        };\n      }\n\n      hasOptions = !$.isEmptyObject(options);\n      options.complete = callback;\n\n      if (options.delay) {\n        element.delay(options.delay);\n      }\n\n      if (hasOptions && $.effects && $.effects.effect[effectName]) {\n        element[method](options);\n      } else if (effectName !== method && element[effectName]) {\n        element[effectName](options.duration, options.easing, callback);\n      } else {\n        element.queue(function (next) {\n          $(this)[method]();\n\n          if (callback) {\n            callback.call(element[0]);\n          }\n\n          next();\n        });\n      }\n    };\n  });\n  var widget = $.widget;\n  /*!\n   * jQuery UI Keycode 1.12.1\n   * http://jqueryui.com\n   *\n   * Copyright jQuery Foundation and other contributors\n   * Released under the MIT license.\n   * http://jquery.org/license\n   */\n  //>>label: Keycode\n  //>>group: Core\n  //>>description: Provide keycodes as keynames\n  //>>docs: http://api.jqueryui.com/jQuery.ui.keyCode/\n\n  var keycode = $.ui.keyCode = {\n    BACKSPACE: 8,\n    COMMA: 188,\n    DELETE: 46,\n    DOWN: 40,\n    END: 35,\n    ENTER: 13,\n    ESCAPE: 27,\n    HOME: 36,\n    LEFT: 37,\n    PAGE_DOWN: 34,\n    PAGE_UP: 33,\n    PERIOD: 190,\n    RIGHT: 39,\n    SPACE: 32,\n    TAB: 9,\n    UP: 38\n  }; // This file is deprecated\n\n  var ie = $.ui.ie = !!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase());\n  /*!\n   * jQuery UI Mouse 1.12.1\n   * http://jqueryui.com\n   *\n   * Copyright jQuery Foundation and other contributors\n   * Released under the MIT license.\n   * http://jquery.org/license\n   */\n  //>>label: Mouse\n  //>>group: Widgets\n  //>>description: Abstracts mouse-based interactions to assist in creating certain widgets.\n  //>>docs: http://api.jqueryui.com/mouse/\n\n  var mouseHandled = false;\n  $(document).on("mouseup", function () {\n    mouseHandled = false;\n  });\n  var widgetsMouse = $.widget("ui.mouse", {\n    version: "1.12.1",\n    options: {\n      cancel: "input, textarea, button, select, option",\n      distance: 1,\n      delay: 0\n    },\n    _mouseInit: function _mouseInit() {\n      var that = this;\n      this.element.on("mousedown." + this.widgetName, function (event) {\n        return that._mouseDown(event);\n      }).on("click." + this.widgetName, function (event) {\n        if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {\n          $.removeData(event.target, that.widgetName + ".preventClickEvent");\n          event.stopImmediatePropagation();\n          return false;\n        }\n      });\n      this.started = false;\n    },\n    // TODO: make sure destroying one instance of mouse doesn\'t mess with\n    // other instances of mouse\n    _mouseDestroy: function _mouseDestroy() {\n      this.element.off("." + this.widgetName);\n\n      if (this._mouseMoveDelegate) {\n        this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);\n      }\n    },\n    _mouseDown: function _mouseDown(event) {\n      // don\'t let more than one widget handle mouseStart\n      if (mouseHandled) {\n        return;\n      }\n\n      this._mouseMoved = false; // We may have missed mouseup (out of window)\n\n      this._mouseStarted && this._mouseUp(event);\n      this._mouseDownEvent = event;\n      var that = this,\n          btnIsLeft = event.which === 1,\n          // event.target.nodeName works around a bug in IE 8 with\n      // disabled inputs (#7620)\n      elIsCancel = typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false;\n\n      if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {\n        return true;\n      }\n\n      this.mouseDelayMet = !this.options.delay;\n\n      if (!this.mouseDelayMet) {\n        this._mouseDelayTimer = setTimeout(function () {\n          that.mouseDelayMet = true;\n        }, this.options.delay);\n      }\n\n      if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\n        this._mouseStarted = this._mouseStart(event) !== false;\n\n        if (!this._mouseStarted) {\n          event.preventDefault();\n          return true;\n        }\n      } // Click event may never have fired (Gecko & Opera)\n\n\n      if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {\n        $.removeData(event.target, this.widgetName + ".preventClickEvent");\n      } // These delegates are required to keep context\n\n\n      this._mouseMoveDelegate = function (event) {\n        return that._mouseMove(event);\n      };\n\n      this._mouseUpDelegate = function (event) {\n        return that._mouseUp(event);\n      };\n\n      this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate);\n      event.preventDefault();\n      mouseHandled = true;\n      return true;\n    },\n    _mouseMove: function _mouseMove(event) {\n      // Only check for mouseups outside the document if you\'ve moved inside the document\n      // at least once. This prevents the firing of mouseup in the case of IE<9, which will\n      // fire a mousemove event if content is placed under the cursor. See #7778\n      // Support: IE <9\n      if (this._mouseMoved) {\n        // IE mouseup check - mouseup happened when mouse was out of window\n        if ($.ui.ie && (!document.documentMode || document.documentMode < 9) && !event.button) {\n          return this._mouseUp(event); // Iframe mouseup check - mouseup occurred in another document\n        } else if (!event.which) {\n          // Support: Safari <=8 - 9\n          // Safari sets which to 0 if you press any of the following keys\n          // during a drag (#14461)\n          if (event.originalEvent.altKey || event.originalEvent.ctrlKey || event.originalEvent.metaKey || event.originalEvent.shiftKey) {\n            this.ignoreMissingWhich = true;\n          } else if (!this.ignoreMissingWhich) {\n            return this._mouseUp(event);\n          }\n        }\n      }\n\n      if (event.which || event.button) {\n        this._mouseMoved = true;\n      }\n\n      if (this._mouseStarted) {\n        this._mouseDrag(event);\n\n        return event.preventDefault();\n      }\n\n      if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\n        this._mouseStarted = this._mouseStart(this._mouseDownEvent, event) !== false;\n        this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event);\n      }\n\n      return !this._mouseStarted;\n    },\n    _mouseUp: function _mouseUp(event) {\n      this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);\n\n      if (this._mouseStarted) {\n        this._mouseStarted = false;\n\n        if (event.target === this._mouseDownEvent.target) {\n          $.data(event.target, this.widgetName + ".preventClickEvent", true);\n        }\n\n        this._mouseStop(event);\n      }\n\n      if (this._mouseDelayTimer) {\n        clearTimeout(this._mouseDelayTimer);\n        delete this._mouseDelayTimer;\n      }\n\n      this.ignoreMissingWhich = false;\n      mouseHandled = false;\n      event.preventDefault();\n    },\n    _mouseDistanceMet: function _mouseDistanceMet(event) {\n      return Math.max(Math.abs(this._mouseDownEvent.pageX - event.pageX), Math.abs(this._mouseDownEvent.pageY - event.pageY)) >= this.options.distance;\n    },\n    _mouseDelayMet: function _mouseDelayMet()\n    /* event */\n    {\n      return this.mouseDelayMet;\n    },\n    // These are placeholder methods, to be overriden by extending plugin\n    _mouseStart: function _mouseStart()\n    /* event */\n    {},\n    _mouseDrag: function _mouseDrag()\n    /* event */\n    {},\n    _mouseStop: function _mouseStop()\n    /* event */\n    {},\n    _mouseCapture: function _mouseCapture()\n    /* event */\n    {\n      return true;\n    }\n  });\n  /*!\n   * jQuery UI Slider 1.12.1\n   * http://jqueryui.com\n   *\n   * Copyright jQuery Foundation and other contributors\n   * Released under the MIT license.\n   * http://jquery.org/license\n   */\n  //>>label: Slider\n  //>>group: Widgets\n  //>>description: Displays a flexible slider with ranges and accessibility via keyboard.\n  //>>docs: http://api.jqueryui.com/slider/\n  //>>demos: http://jqueryui.com/slider/\n  //>>css.structure: ../../themes/base/core.css\n  //>>css.structure: ../../themes/base/slider.css\n  //>>css.theme: ../../themes/base/theme.css\n\n  var widgetsSlider = $.widget("ui.slider", $.ui.mouse, {\n    version: "1.12.1",\n    widgetEventPrefix: "slide",\n    options: {\n      animate: false,\n      classes: {\n        "ui-slider": "ui-corner-all",\n        "ui-slider-handle": "ui-corner-all",\n        // Note: ui-widget-header isn\'t the most fittingly semantic framework class for this\n        // element, but worked best visually with a variety of themes\n        "ui-slider-range": "ui-corner-all ui-widget-header"\n      },\n      distance: 0,\n      max: 100,\n      min: 0,\n      orientation: "horizontal",\n      range: false,\n      step: 1,\n      value: 0,\n      values: null,\n      // Callbacks\n      change: null,\n      slide: null,\n      start: null,\n      stop: null\n    },\n    // Number of pages in a slider\n    // (how many times can you page up/down to go through the whole range)\n    numPages: 5,\n    _create: function _create() {\n      this._keySliding = false;\n      this._mouseSliding = false;\n      this._animateOff = true;\n      this._handleIndex = null;\n\n      this._detectOrientation();\n\n      this._mouseInit();\n\n      this._calculateNewMax();\n\n      this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content");\n\n      this._refresh();\n\n      this._animateOff = false;\n    },\n    _refresh: function _refresh() {\n      this._createRange();\n\n      this._createHandles();\n\n      this._setupEvents();\n\n      this._refreshValue();\n    },\n    _createHandles: function _createHandles() {\n      var i,\n          handleCount,\n          options = this.options,\n          existingHandles = this.element.find(".ui-slider-handle"),\n          handle = "<span tabindex=\'0\'></span>",\n          handles = [];\n      handleCount = options.values && options.values.length || 1;\n\n      if (existingHandles.length > handleCount) {\n        existingHandles.slice(handleCount).remove();\n        existingHandles = existingHandles.slice(0, handleCount);\n      }\n\n      for (i = existingHandles.length; i < handleCount; i++) {\n        handles.push(handle);\n      }\n\n      this.handles = existingHandles.add($(handles.join("")).appendTo(this.element));\n\n      this._addClass(this.handles, "ui-slider-handle", "ui-state-default");\n\n      this.handle = this.handles.eq(0);\n      this.handles.each(function (i) {\n        $(this).data("ui-slider-handle-index", i).attr("tabIndex", 0);\n      });\n    },\n    _createRange: function _createRange() {\n      var options = this.options;\n\n      if (options.range) {\n        if (options.range === true) {\n          if (!options.values) {\n            options.values = [this._valueMin(), this._valueMin()];\n          } else if (options.values.length && options.values.length !== 2) {\n            options.values = [options.values[0], options.values[0]];\n          } else if ($.isArray(options.values)) {\n            options.values = options.values.slice(0);\n          }\n        }\n\n        if (!this.range || !this.range.length) {\n          this.range = $("<div>").appendTo(this.element);\n\n          this._addClass(this.range, "ui-slider-range");\n        } else {\n          this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max"); // Handle range switching from true to min/max\n\n\n          this.range.css({\n            "left": "",\n            "bottom": ""\n          });\n        }\n\n        if (options.range === "min" || options.range === "max") {\n          this._addClass(this.range, "ui-slider-range-" + options.range);\n        }\n      } else {\n        if (this.range) {\n          this.range.remove();\n        }\n\n        this.range = null;\n      }\n    },\n    _setupEvents: function _setupEvents() {\n      this._off(this.handles);\n\n      this._on(this.handles, this._handleEvents);\n\n      this._hoverable(this.handles);\n\n      this._focusable(this.handles);\n    },\n    _destroy: function _destroy() {\n      this.handles.remove();\n\n      if (this.range) {\n        this.range.remove();\n      }\n\n      this._mouseDestroy();\n    },\n    _mouseCapture: function _mouseCapture(event) {\n      var position,\n          normValue,\n          distance,\n          closestHandle,\n          index,\n          allowed,\n          offset,\n          mouseOverHandle,\n          that = this,\n          o = this.options;\n\n      if (o.disabled) {\n        return false;\n      }\n\n      this.elementSize = {\n        width: this.element.outerWidth(),\n        height: this.element.outerHeight()\n      };\n      this.elementOffset = this.element.offset();\n      position = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      normValue = this._normValueFromMouse(position);\n      distance = this._valueMax() - this._valueMin() + 1;\n      this.handles.each(function (i) {\n        var thisDistance = Math.abs(normValue - that.values(i));\n\n        if (distance > thisDistance || distance === thisDistance && (i === that._lastChangedValue || that.values(i) === o.min)) {\n          distance = thisDistance;\n          closestHandle = $(this);\n          index = i;\n        }\n      });\n      allowed = this._start(event, index);\n\n      if (allowed === false) {\n        return false;\n      }\n\n      this._mouseSliding = true;\n      this._handleIndex = index;\n\n      this._addClass(closestHandle, null, "ui-state-active");\n\n      closestHandle.trigger("focus");\n      offset = closestHandle.offset();\n      mouseOverHandle = !$(event.target).parents().addBack().is(".ui-slider-handle");\n      this._clickOffset = mouseOverHandle ? {\n        left: 0,\n        top: 0\n      } : {\n        left: event.pageX - offset.left - closestHandle.width() / 2,\n        top: event.pageY - offset.top - closestHandle.height() / 2 - (parseInt(closestHandle.css("borderTopWidth"), 10) || 0) - (parseInt(closestHandle.css("borderBottomWidth"), 10) || 0) + (parseInt(closestHandle.css("marginTop"), 10) || 0)\n      };\n\n      if (!this.handles.hasClass("ui-state-hover")) {\n        this._slide(event, index, normValue);\n      }\n\n      this._animateOff = true;\n      return true;\n    },\n    _mouseStart: function _mouseStart() {\n      return true;\n    },\n    _mouseDrag: function _mouseDrag(event) {\n      var position = {\n        x: event.pageX,\n        y: event.pageY\n      },\n          normValue = this._normValueFromMouse(position);\n\n      this._slide(event, this._handleIndex, normValue);\n\n      return false;\n    },\n    _mouseStop: function _mouseStop(event) {\n      this._removeClass(this.handles, null, "ui-state-active");\n\n      this._mouseSliding = false;\n\n      this._stop(event, this._handleIndex);\n\n      this._change(event, this._handleIndex);\n\n      this._handleIndex = null;\n      this._clickOffset = null;\n      this._animateOff = false;\n      return false;\n    },\n    _detectOrientation: function _detectOrientation() {\n      this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal";\n    },\n    _normValueFromMouse: function _normValueFromMouse(position) {\n      var pixelTotal, pixelMouse, percentMouse, valueTotal, valueMouse;\n\n      if (this.orientation === "horizontal") {\n        pixelTotal = this.elementSize.width;\n        pixelMouse = position.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0);\n      } else {\n        pixelTotal = this.elementSize.height;\n        pixelMouse = position.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0);\n      }\n\n      percentMouse = pixelMouse / pixelTotal;\n\n      if (percentMouse > 1) {\n        percentMouse = 1;\n      }\n\n      if (percentMouse < 0) {\n        percentMouse = 0;\n      }\n\n      if (this.orientation === "vertical") {\n        percentMouse = 1 - percentMouse;\n      }\n\n      valueTotal = this._valueMax() - this._valueMin();\n      valueMouse = this._valueMin() + percentMouse * valueTotal;\n      return this._trimAlignValue(valueMouse);\n    },\n    _uiHash: function _uiHash(index, value, values) {\n      var uiHash = {\n        handle: this.handles[index],\n        handleIndex: index,\n        value: value !== undefined ? value : this.value()\n      };\n\n      if (this._hasMultipleValues()) {\n        uiHash.value = value !== undefined ? value : this.values(index);\n        uiHash.values = values || this.values();\n      }\n\n      return uiHash;\n    },\n    _hasMultipleValues: function _hasMultipleValues() {\n      return this.options.values && this.options.values.length;\n    },\n    _start: function _start(event, index) {\n      return this._trigger("start", event, this._uiHash(index));\n    },\n    _slide: function _slide(event, index, newVal) {\n      var allowed,\n          otherVal,\n          currentValue = this.value(),\n          newValues = this.values();\n\n      if (this._hasMultipleValues()) {\n        otherVal = this.values(index ? 0 : 1);\n        currentValue = this.values(index);\n\n        if (this.options.values.length === 2 && this.options.range === true) {\n          newVal = index === 0 ? Math.min(otherVal, newVal) : Math.max(otherVal, newVal);\n        }\n\n        newValues[index] = newVal;\n      }\n\n      if (newVal === currentValue) {\n        return;\n      }\n\n      allowed = this._trigger("slide", event, this._uiHash(index, newVal, newValues)); // A slide can be canceled by returning false from the slide callback\n\n      if (allowed === false) {\n        return;\n      }\n\n      if (this._hasMultipleValues()) {\n        this.values(index, newVal);\n      } else {\n        this.value(newVal);\n      }\n    },\n    _stop: function _stop(event, index) {\n      this._trigger("stop", event, this._uiHash(index));\n    },\n    _change: function _change(event, index) {\n      if (!this._keySliding && !this._mouseSliding) {\n        //store the last changed value index for reference when handles overlap\n        this._lastChangedValue = index;\n\n        this._trigger("change", event, this._uiHash(index));\n      }\n    },\n    value: function value(newValue) {\n      if (arguments.length) {\n        this.options.value = this._trimAlignValue(newValue);\n\n        this._refreshValue();\n\n        this._change(null, 0);\n\n        return;\n      }\n\n      return this._value();\n    },\n    values: function values(index, newValue) {\n      var vals, newValues, i;\n\n      if (arguments.length > 1) {\n        this.options.values[index] = this._trimAlignValue(newValue);\n\n        this._refreshValue();\n\n        this._change(null, index);\n\n        return;\n      }\n\n      if (arguments.length) {\n        if ($.isArray(arguments[0])) {\n          vals = this.options.values;\n          newValues = arguments[0];\n\n          for (i = 0; i < vals.length; i += 1) {\n            vals[i] = this._trimAlignValue(newValues[i]);\n\n            this._change(null, i);\n          }\n\n          this._refreshValue();\n        } else {\n          if (this._hasMultipleValues()) {\n            return this._values(index);\n          } else {\n            return this.value();\n          }\n        }\n      } else {\n        return this._values();\n      }\n    },\n    _setOption: function _setOption(key, value) {\n      var i,\n          valsLength = 0;\n\n      if (key === "range" && this.options.range === true) {\n        if (value === "min") {\n          this.options.value = this._values(0);\n          this.options.values = null;\n        } else if (value === "max") {\n          this.options.value = this._values(this.options.values.length - 1);\n          this.options.values = null;\n        }\n      }\n\n      if ($.isArray(this.options.values)) {\n        valsLength = this.options.values.length;\n      }\n\n      this._super(key, value);\n\n      switch (key) {\n        case "orientation":\n          this._detectOrientation();\n\n          this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation);\n\n          this._refreshValue();\n\n          if (this.options.range) {\n            this._refreshRange(value);\n          } // Reset positioning from previous orientation\n\n\n          this.handles.css(value === "horizontal" ? "bottom" : "left", "");\n          break;\n\n        case "value":\n          this._animateOff = true;\n\n          this._refreshValue();\n\n          this._change(null, 0);\n\n          this._animateOff = false;\n          break;\n\n        case "values":\n          this._animateOff = true;\n\n          this._refreshValue(); // Start from the last handle to prevent unreachable handles (#9046)\n\n\n          for (i = valsLength - 1; i >= 0; i--) {\n            this._change(null, i);\n          }\n\n          this._animateOff = false;\n          break;\n\n        case "step":\n        case "min":\n        case "max":\n          this._animateOff = true;\n\n          this._calculateNewMax();\n\n          this._refreshValue();\n\n          this._animateOff = false;\n          break;\n\n        case "range":\n          this._animateOff = true;\n\n          this._refresh();\n\n          this._animateOff = false;\n          break;\n      }\n    },\n    _setOptionDisabled: function _setOptionDisabled(value) {\n      this._super(value);\n\n      this._toggleClass(null, "ui-state-disabled", !!value);\n    },\n    //internal value getter\n    // _value() returns value trimmed by min and max, aligned by step\n    _value: function _value() {\n      var val = this.options.value;\n      val = this._trimAlignValue(val);\n      return val;\n    },\n    //internal values getter\n    // _values() returns array of values trimmed by min and max, aligned by step\n    // _values( index ) returns single value trimmed by min and max, aligned by step\n    _values: function _values(index) {\n      var val, vals, i;\n\n      if (arguments.length) {\n        val = this.options.values[index];\n        val = this._trimAlignValue(val);\n        return val;\n      } else if (this._hasMultipleValues()) {\n        // .slice() creates a copy of the array\n        // this copy gets trimmed by min and max and then returned\n        vals = this.options.values.slice();\n\n        for (i = 0; i < vals.length; i += 1) {\n          vals[i] = this._trimAlignValue(vals[i]);\n        }\n\n        return vals;\n      } else {\n        return [];\n      }\n    },\n    // Returns the step-aligned value that val is closest to, between (inclusive) min and max\n    _trimAlignValue: function _trimAlignValue(val) {\n      if (val <= this._valueMin()) {\n        return this._valueMin();\n      }\n\n      if (val >= this._valueMax()) {\n        return this._valueMax();\n      }\n\n      var step = this.options.step > 0 ? this.options.step : 1,\n          valModStep = (val - this._valueMin()) % step,\n          alignValue = val - valModStep;\n\n      if (Math.abs(valModStep) * 2 >= step) {\n        alignValue += valModStep > 0 ? step : -step;\n      } // Since JavaScript has problems with large floats, round\n      // the final value to 5 digits after the decimal point (see #4124)\n\n\n      return parseFloat(alignValue.toFixed(5));\n    },\n    _calculateNewMax: function _calculateNewMax() {\n      var max = this.options.max,\n          min = this._valueMin(),\n          step = this.options.step,\n          aboveMin = Math.round((max - min) / step) * step;\n\n      max = aboveMin + min;\n\n      if (max > this.options.max) {\n        //If max is not divisible by step, rounding off may increase its value\n        max -= step;\n      }\n\n      this.max = parseFloat(max.toFixed(this._precision()));\n    },\n    _precision: function _precision() {\n      var precision = this._precisionOf(this.options.step);\n\n      if (this.options.min !== null) {\n        precision = Math.max(precision, this._precisionOf(this.options.min));\n      }\n\n      return precision;\n    },\n    _precisionOf: function _precisionOf(num) {\n      var str = num.toString(),\n          decimal = str.indexOf(".");\n      return decimal === -1 ? 0 : str.length - decimal - 1;\n    },\n    _valueMin: function _valueMin() {\n      return this.options.min;\n    },\n    _valueMax: function _valueMax() {\n      return this.max;\n    },\n    _refreshRange: function _refreshRange(orientation) {\n      if (orientation === "vertical") {\n        this.range.css({\n          "width": "",\n          "left": ""\n        });\n      }\n\n      if (orientation === "horizontal") {\n        this.range.css({\n          "height": "",\n          "bottom": ""\n        });\n      }\n    },\n    _refreshValue: function _refreshValue() {\n      var lastValPercent,\n          valPercent,\n          value,\n          valueMin,\n          valueMax,\n          oRange = this.options.range,\n          o = this.options,\n          that = this,\n          animate = !this._animateOff ? o.animate : false,\n          _set = {};\n\n      if (this._hasMultipleValues()) {\n        this.handles.each(function (i) {\n          valPercent = (that.values(i) - that._valueMin()) / (that._valueMax() - that._valueMin()) * 100;\n          _set[that.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";\n          $(this).stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);\n\n          if (that.options.range === true) {\n            if (that.orientation === "horizontal") {\n              if (i === 0) {\n                that.range.stop(1, 1)[animate ? "animate" : "css"]({\n                  left: valPercent + "%"\n                }, o.animate);\n              }\n\n              if (i === 1) {\n                that.range[animate ? "animate" : "css"]({\n                  width: valPercent - lastValPercent + "%"\n                }, {\n                  queue: false,\n                  duration: o.animate\n                });\n              }\n            } else {\n              if (i === 0) {\n                that.range.stop(1, 1)[animate ? "animate" : "css"]({\n                  bottom: valPercent + "%"\n                }, o.animate);\n              }\n\n              if (i === 1) {\n                that.range[animate ? "animate" : "css"]({\n                  height: valPercent - lastValPercent + "%"\n                }, {\n                  queue: false,\n                  duration: o.animate\n                });\n              }\n            }\n          }\n\n          lastValPercent = valPercent;\n        });\n      } else {\n        value = this.value();\n        valueMin = this._valueMin();\n        valueMax = this._valueMax();\n        valPercent = valueMax !== valueMin ? (value - valueMin) / (valueMax - valueMin) * 100 : 0;\n        _set[this.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";\n        this.handle.stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);\n\n        if (oRange === "min" && this.orientation === "horizontal") {\n          this.range.stop(1, 1)[animate ? "animate" : "css"]({\n            width: valPercent + "%"\n          }, o.animate);\n        }\n\n        if (oRange === "max" && this.orientation === "horizontal") {\n          this.range.stop(1, 1)[animate ? "animate" : "css"]({\n            width: 100 - valPercent + "%"\n          }, o.animate);\n        }\n\n        if (oRange === "min" && this.orientation === "vertical") {\n          this.range.stop(1, 1)[animate ? "animate" : "css"]({\n            height: valPercent + "%"\n          }, o.animate);\n        }\n\n        if (oRange === "max" && this.orientation === "vertical") {\n          this.range.stop(1, 1)[animate ? "animate" : "css"]({\n            height: 100 - valPercent + "%"\n          }, o.animate);\n        }\n      }\n    },\n    _handleEvents: {\n      keydown: function keydown(event) {\n        var allowed,\n            curVal,\n            newVal,\n            step,\n            index = $(event.target).data("ui-slider-handle-index");\n\n        switch (event.keyCode) {\n          case $.ui.keyCode.HOME:\n          case $.ui.keyCode.END:\n          case $.ui.keyCode.PAGE_UP:\n          case $.ui.keyCode.PAGE_DOWN:\n          case $.ui.keyCode.UP:\n          case $.ui.keyCode.RIGHT:\n          case $.ui.keyCode.DOWN:\n          case $.ui.keyCode.LEFT:\n            event.preventDefault();\n\n            if (!this._keySliding) {\n              this._keySliding = true;\n\n              this._addClass($(event.target), null, "ui-state-active");\n\n              allowed = this._start(event, index);\n\n              if (allowed === false) {\n                return;\n              }\n            }\n\n            break;\n        }\n\n        step = this.options.step;\n\n        if (this._hasMultipleValues()) {\n          curVal = newVal = this.values(index);\n        } else {\n          curVal = newVal = this.value();\n        }\n\n        switch (event.keyCode) {\n          case $.ui.keyCode.HOME:\n            newVal = this._valueMin();\n            break;\n\n          case $.ui.keyCode.END:\n            newVal = this._valueMax();\n            break;\n\n          case $.ui.keyCode.PAGE_UP:\n            newVal = this._trimAlignValue(curVal + (this._valueMax() - this._valueMin()) / this.numPages);\n            break;\n\n          case $.ui.keyCode.PAGE_DOWN:\n            newVal = this._trimAlignValue(curVal - (this._valueMax() - this._valueMin()) / this.numPages);\n            break;\n\n          case $.ui.keyCode.UP:\n          case $.ui.keyCode.RIGHT:\n            if (curVal === this._valueMax()) {\n              return;\n            }\n\n            newVal = this._trimAlignValue(curVal + step);\n            break;\n\n          case $.ui.keyCode.DOWN:\n          case $.ui.keyCode.LEFT:\n            if (curVal === this._valueMin()) {\n              return;\n            }\n\n            newVal = this._trimAlignValue(curVal - step);\n            break;\n        }\n\n        this._slide(event, index, newVal);\n      },\n      keyup: function keyup(event) {\n        var index = $(event.target).data("ui-slider-handle-index");\n\n        if (this._keySliding) {\n          this._keySliding = false;\n\n          this._stop(event, index);\n\n          this._change(event, index);\n\n          this._removeClass($(event.target), null, "ui-state-active");\n        }\n      }\n    }\n  });\n});\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/jquery-ui.js?')},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(16);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/jquery-ui.css?")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(17)(false);\n// Imports\nvar urlEscape = __webpack_require__(18);\nvar ___CSS_LOADER_URL___0___ = urlEscape(__webpack_require__(19));\nvar ___CSS_LOADER_URL___1___ = urlEscape(__webpack_require__(20));\nvar ___CSS_LOADER_URL___2___ = urlEscape(__webpack_require__(21));\nvar ___CSS_LOADER_URL___3___ = urlEscape(__webpack_require__(22));\nvar ___CSS_LOADER_URL___4___ = urlEscape(__webpack_require__(23));\nvar ___CSS_LOADER_URL___5___ = urlEscape(__webpack_require__(24));\n\n// Module\nexports.push([module.i, "/*! jQuery UI - v1.12.1 - 2019-05-27\\n* http://jqueryui.com\\n* Includes: core.css, slider.css, theme.css\\n* To view and modify this theme, visit http://jqueryui.com/themeroller/?scope=&folderName=base&cornerRadiusShadow=8px&offsetLeftShadow=0px&offsetTopShadow=0px&thicknessShadow=5px&opacityShadow=30&bgImgOpacityShadow=0&bgTextureShadow=flat&bgColorShadow=666666&opacityOverlay=30&bgImgOpacityOverlay=0&bgTextureOverlay=flat&bgColorOverlay=aaaaaa&iconColorError=cc0000&fcError=5f3f3f&borderColorError=f1a899&bgTextureError=flat&bgColorError=fddfdf&iconColorHighlight=777620&fcHighlight=777620&borderColorHighlight=dad55e&bgTextureHighlight=flat&bgColorHighlight=fffa90&iconColorActive=ffffff&fcActive=ffffff&borderColorActive=003eff&bgTextureActive=flat&bgColorActive=007fff&iconColorHover=555555&fcHover=2b2b2b&borderColorHover=cccccc&bgTextureHover=flat&bgColorHover=ededed&iconColorDefault=777777&fcDefault=454545&borderColorDefault=c5c5c5&bgTextureDefault=flat&bgColorDefault=f6f6f6&iconColorContent=444444&fcContent=333333&borderColorContent=dddddd&bgTextureContent=flat&bgColorContent=ffffff&iconColorHeader=444444&fcHeader=333333&borderColorHeader=dddddd&bgTextureHeader=flat&bgColorHeader=e9e9e9&cornerRadius=3px&fwDefault=normal&fsDefault=1em&ffDefault=Arial%2CHelvetica%2Csans-serif\\n* Copyright jQuery Foundation and other contributors; Licensed MIT */\\n\\n/* Layout helpers\\n----------------------------------*/\\n.ui-helper-hidden {\\n\\tdisplay: none;\\n}\\n.ui-helper-hidden-accessible {\\n\\tborder: 0;\\n\\tclip: rect(0 0 0 0);\\n\\theight: 1px;\\n\\tmargin: -1px;\\n\\toverflow: hidden;\\n\\tpadding: 0;\\n\\tposition: absolute;\\n\\twidth: 1px;\\n}\\n.ui-helper-reset {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tborder: 0;\\n\\toutline: 0;\\n\\tline-height: 1.3;\\n\\ttext-decoration: none;\\n\\tfont-size: 100%;\\n\\tlist-style: none;\\n}\\n.ui-helper-clearfix:before,\\n.ui-helper-clearfix:after {\\n\\tcontent: \\"\\";\\n\\tdisplay: table;\\n\\tborder-collapse: collapse;\\n}\\n.ui-helper-clearfix:after {\\n\\tclear: both;\\n}\\n.ui-helper-zfix {\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\tposition: absolute;\\n\\topacity: 0;\\n\\tfilter:Alpha(Opacity=0); /* support: IE8 */\\n}\\n\\n.ui-front {\\n\\tz-index: 100;\\n}\\n\\n\\n/* Interaction Cues\\n----------------------------------*/\\n.ui-state-disabled {\\n\\tcursor: default !important;\\n\\tpointer-events: none;\\n}\\n\\n\\n/* Icons\\n----------------------------------*/\\n.ui-icon {\\n\\tdisplay: inline-block;\\n\\tvertical-align: middle;\\n\\tmargin-top: -.25em;\\n\\tposition: relative;\\n\\ttext-indent: -99999px;\\n\\toverflow: hidden;\\n\\tbackground-repeat: no-repeat;\\n}\\n\\n.ui-widget-icon-block {\\n\\tleft: 50%;\\n\\tmargin-left: -8px;\\n\\tdisplay: block;\\n}\\n\\n/* Misc visuals\\n----------------------------------*/\\n\\n/* Overlays */\\n.ui-widget-overlay {\\n\\tposition: fixed;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.ui-slider {\\n\\tposition: relative;\\n\\ttext-align: left;\\n}\\n.ui-slider .ui-slider-handle {\\n\\tposition: absolute;\\n\\tz-index: 2;\\n\\twidth: 1.2em;\\n\\theight: 1.2em;\\n\\tcursor: default;\\n\\t-ms-touch-action: none;\\n\\ttouch-action: none;\\n}\\n.ui-slider .ui-slider-range {\\n\\tposition: absolute;\\n\\tz-index: 1;\\n\\tfont-size: .7em;\\n\\tdisplay: block;\\n\\tborder: 0;\\n\\tbackground-position: 0 0;\\n}\\n\\n/* support: IE8 - See #6727 */\\n.ui-slider.ui-state-disabled .ui-slider-handle,\\n.ui-slider.ui-state-disabled .ui-slider-range {\\n\\tfilter: inherit;\\n}\\n\\n.ui-slider-horizontal {\\n\\theight: .8em;\\n}\\n.ui-slider-horizontal .ui-slider-handle {\\n\\ttop: -.3em;\\n\\tmargin-left: -.6em;\\n}\\n.ui-slider-horizontal .ui-slider-range {\\n\\ttop: 0;\\n\\theight: 100%;\\n}\\n.ui-slider-horizontal .ui-slider-range-min {\\n\\tleft: 0;\\n}\\n.ui-slider-horizontal .ui-slider-range-max {\\n\\tright: 0;\\n}\\n\\n.ui-slider-vertical {\\n\\twidth: .8em;\\n\\theight: 100px;\\n}\\n.ui-slider-vertical .ui-slider-handle {\\n\\tleft: -.3em;\\n\\tmargin-left: 0;\\n\\tmargin-bottom: -.6em;\\n}\\n.ui-slider-vertical .ui-slider-range {\\n\\tleft: 0;\\n\\twidth: 100%;\\n}\\n.ui-slider-vertical .ui-slider-range-min {\\n\\tbottom: 0;\\n}\\n.ui-slider-vertical .ui-slider-range-max {\\n\\ttop: 0;\\n}\\n\\n/* Component containers\\n----------------------------------*/\\n.ui-widget {\\n\\tfont-family: Arial,Helvetica,sans-serif;\\n\\tfont-size: 1em;\\n}\\n.ui-widget .ui-widget {\\n\\tfont-size: 1em;\\n}\\n.ui-widget input,\\n.ui-widget select,\\n.ui-widget textarea,\\n.ui-widget button {\\n\\tfont-family: Arial,Helvetica,sans-serif;\\n\\tfont-size: 1em;\\n}\\n.ui-widget.ui-widget-content {\\n\\tborder: 1px solid #c5c5c5;\\n}\\n.ui-widget-content {\\n\\tborder: 1px solid #dddddd;\\n\\tbackground: #ffffff;\\n\\tcolor: #333333;\\n}\\n.ui-widget-content a {\\n\\tcolor: #333333;\\n}\\n.ui-widget-header {\\n\\tborder: 1px solid #dddddd;\\n\\tbackground: #e9e9e9;\\n\\tcolor: #333333;\\n\\tfont-weight: bold;\\n}\\n.ui-widget-header a {\\n\\tcolor: #333333;\\n}\\n\\n/* Interaction states\\n----------------------------------*/\\n.ui-state-default,\\n.ui-widget-content .ui-state-default,\\n.ui-widget-header .ui-state-default,\\n.ui-button,\\n\\n/* We use html here because we need a greater specificity to make sure disabled\\nworks properly when clicked or hovered */\\nhtml .ui-button.ui-state-disabled:hover,\\nhtml .ui-button.ui-state-disabled:active {\\n\\tborder: 1px solid #c5c5c5;\\n\\tbackground: #f6f6f6;\\n\\tfont-weight: normal;\\n\\tcolor: #454545;\\n}\\n.ui-state-default a,\\n.ui-state-default a:link,\\n.ui-state-default a:visited,\\na.ui-button,\\na:link.ui-button,\\na:visited.ui-button,\\n.ui-button {\\n\\tcolor: #454545;\\n\\ttext-decoration: none;\\n}\\n.ui-state-hover,\\n.ui-widget-content .ui-state-hover,\\n.ui-widget-header .ui-state-hover,\\n.ui-state-focus,\\n.ui-widget-content .ui-state-focus,\\n.ui-widget-header .ui-state-focus,\\n.ui-button:hover,\\n.ui-button:focus {\\n\\tborder: 1px solid #cccccc;\\n\\tbackground: #ededed;\\n\\tfont-weight: normal;\\n\\tcolor: #2b2b2b;\\n}\\n.ui-state-hover a,\\n.ui-state-hover a:hover,\\n.ui-state-hover a:link,\\n.ui-state-hover a:visited,\\n.ui-state-focus a,\\n.ui-state-focus a:hover,\\n.ui-state-focus a:link,\\n.ui-state-focus a:visited,\\na.ui-button:hover,\\na.ui-button:focus {\\n\\tcolor: #2b2b2b;\\n\\ttext-decoration: none;\\n}\\n\\n.ui-visual-focus {\\n\\tbox-shadow: 0 0 3px 1px rgb(94, 158, 214);\\n}\\n.ui-state-active,\\n.ui-widget-content .ui-state-active,\\n.ui-widget-header .ui-state-active,\\na.ui-button:active,\\n.ui-button:active,\\n.ui-button.ui-state-active:hover {\\n\\tborder: 1px solid #003eff;\\n\\tbackground: #007fff;\\n\\tfont-weight: normal;\\n\\tcolor: #ffffff;\\n}\\n.ui-icon-background,\\n.ui-state-active .ui-icon-background {\\n\\tborder: #003eff;\\n\\tbackground-color: #ffffff;\\n}\\n.ui-state-active a,\\n.ui-state-active a:link,\\n.ui-state-active a:visited {\\n\\tcolor: #ffffff;\\n\\ttext-decoration: none;\\n}\\n\\n/* Interaction Cues\\n----------------------------------*/\\n.ui-state-highlight,\\n.ui-widget-content .ui-state-highlight,\\n.ui-widget-header .ui-state-highlight {\\n\\tborder: 1px solid #dad55e;\\n\\tbackground: #fffa90;\\n\\tcolor: #777620;\\n}\\n.ui-state-checked {\\n\\tborder: 1px solid #dad55e;\\n\\tbackground: #fffa90;\\n}\\n.ui-state-highlight a,\\n.ui-widget-content .ui-state-highlight a,\\n.ui-widget-header .ui-state-highlight a {\\n\\tcolor: #777620;\\n}\\n.ui-state-error,\\n.ui-widget-content .ui-state-error,\\n.ui-widget-header .ui-state-error {\\n\\tborder: 1px solid #f1a899;\\n\\tbackground: #fddfdf;\\n\\tcolor: #5f3f3f;\\n}\\n.ui-state-error a,\\n.ui-widget-content .ui-state-error a,\\n.ui-widget-header .ui-state-error a {\\n\\tcolor: #5f3f3f;\\n}\\n.ui-state-error-text,\\n.ui-widget-content .ui-state-error-text,\\n.ui-widget-header .ui-state-error-text {\\n\\tcolor: #5f3f3f;\\n}\\n.ui-priority-primary,\\n.ui-widget-content .ui-priority-primary,\\n.ui-widget-header .ui-priority-primary {\\n\\tfont-weight: bold;\\n}\\n.ui-priority-secondary,\\n.ui-widget-content .ui-priority-secondary,\\n.ui-widget-header .ui-priority-secondary {\\n\\topacity: .7;\\n\\tfilter:Alpha(Opacity=70); /* support: IE8 */\\n\\tfont-weight: normal;\\n}\\n.ui-state-disabled,\\n.ui-widget-content .ui-state-disabled,\\n.ui-widget-header .ui-state-disabled {\\n\\topacity: .35;\\n\\tfilter:Alpha(Opacity=35); /* support: IE8 */\\n\\tbackground-image: none;\\n}\\n.ui-state-disabled .ui-icon {\\n\\tfilter:Alpha(Opacity=35); /* support: IE8 - See #6059 */\\n}\\n\\n/* Icons\\n----------------------------------*/\\n\\n/* states and images */\\n.ui-icon {\\n\\twidth: 16px;\\n\\theight: 16px;\\n}\\n.ui-icon,\\n.ui-widget-content .ui-icon {\\n\\tbackground-image: url(" + ___CSS_LOADER_URL___0___ + ");\\n}\\n.ui-widget-header .ui-icon {\\n\\tbackground-image: url(" + ___CSS_LOADER_URL___0___ + ");\\n}\\n.ui-state-hover .ui-icon,\\n.ui-state-focus .ui-icon,\\n.ui-button:hover .ui-icon,\\n.ui-button:focus .ui-icon {\\n\\tbackground-image: url(" + ___CSS_LOADER_URL___1___ + ");\\n}\\n.ui-state-active .ui-icon,\\n.ui-button:active .ui-icon {\\n\\tbackground-image: url(" + ___CSS_LOADER_URL___2___ + ");\\n}\\n.ui-state-highlight .ui-icon,\\n.ui-button .ui-state-highlight.ui-icon {\\n\\tbackground-image: url(" + ___CSS_LOADER_URL___3___ + ");\\n}\\n.ui-state-error .ui-icon,\\n.ui-state-error-text .ui-icon {\\n\\tbackground-image: url(" + ___CSS_LOADER_URL___4___ + ");\\n}\\n.ui-button .ui-icon {\\n\\tbackground-image: url(" + ___CSS_LOADER_URL___5___ + ");\\n}\\n\\n/* positioning */\\n.ui-icon-blank { background-position: 16px 16px; }\\n.ui-icon-caret-1-n { background-position: 0 0; }\\n.ui-icon-caret-1-ne { background-position: -16px 0; }\\n.ui-icon-caret-1-e { background-position: -32px 0; }\\n.ui-icon-caret-1-se { background-position: -48px 0; }\\n.ui-icon-caret-1-s { background-position: -65px 0; }\\n.ui-icon-caret-1-sw { background-position: -80px 0; }\\n.ui-icon-caret-1-w { background-position: -96px 0; }\\n.ui-icon-caret-1-nw { background-position: -112px 0; }\\n.ui-icon-caret-2-n-s { background-position: -128px 0; }\\n.ui-icon-caret-2-e-w { background-position: -144px 0; }\\n.ui-icon-triangle-1-n { background-position: 0 -16px; }\\n.ui-icon-triangle-1-ne { background-position: -16px -16px; }\\n.ui-icon-triangle-1-e { background-position: -32px -16px; }\\n.ui-icon-triangle-1-se { background-position: -48px -16px; }\\n.ui-icon-triangle-1-s { background-position: -65px -16px; }\\n.ui-icon-triangle-1-sw { background-position: -80px -16px; }\\n.ui-icon-triangle-1-w { background-position: -96px -16px; }\\n.ui-icon-triangle-1-nw { background-position: -112px -16px; }\\n.ui-icon-triangle-2-n-s { background-position: -128px -16px; }\\n.ui-icon-triangle-2-e-w { background-position: -144px -16px; }\\n.ui-icon-arrow-1-n { background-position: 0 -32px; }\\n.ui-icon-arrow-1-ne { background-position: -16px -32px; }\\n.ui-icon-arrow-1-e { background-position: -32px -32px; }\\n.ui-icon-arrow-1-se { background-position: -48px -32px; }\\n.ui-icon-arrow-1-s { background-position: -65px -32px; }\\n.ui-icon-arrow-1-sw { background-position: -80px -32px; }\\n.ui-icon-arrow-1-w { background-position: -96px -32px; }\\n.ui-icon-arrow-1-nw { background-position: -112px -32px; }\\n.ui-icon-arrow-2-n-s { background-position: -128px -32px; }\\n.ui-icon-arrow-2-ne-sw { background-position: -144px -32px; }\\n.ui-icon-arrow-2-e-w { background-position: -160px -32px; }\\n.ui-icon-arrow-2-se-nw { background-position: -176px -32px; }\\n.ui-icon-arrowstop-1-n { background-position: -192px -32px; }\\n.ui-icon-arrowstop-1-e { background-position: -208px -32px; }\\n.ui-icon-arrowstop-1-s { background-position: -224px -32px; }\\n.ui-icon-arrowstop-1-w { background-position: -240px -32px; }\\n.ui-icon-arrowthick-1-n { background-position: 1px -48px; }\\n.ui-icon-arrowthick-1-ne { background-position: -16px -48px; }\\n.ui-icon-arrowthick-1-e { background-position: -32px -48px; }\\n.ui-icon-arrowthick-1-se { background-position: -48px -48px; }\\n.ui-icon-arrowthick-1-s { background-position: -64px -48px; }\\n.ui-icon-arrowthick-1-sw { background-position: -80px -48px; }\\n.ui-icon-arrowthick-1-w { background-position: -96px -48px; }\\n.ui-icon-arrowthick-1-nw { background-position: -112px -48px; }\\n.ui-icon-arrowthick-2-n-s { background-position: -128px -48px; }\\n.ui-icon-arrowthick-2-ne-sw { background-position: -144px -48px; }\\n.ui-icon-arrowthick-2-e-w { background-position: -160px -48px; }\\n.ui-icon-arrowthick-2-se-nw { background-position: -176px -48px; }\\n.ui-icon-arrowthickstop-1-n { background-position: -192px -48px; }\\n.ui-icon-arrowthickstop-1-e { background-position: -208px -48px; }\\n.ui-icon-arrowthickstop-1-s { background-position: -224px -48px; }\\n.ui-icon-arrowthickstop-1-w { background-position: -240px -48px; }\\n.ui-icon-arrowreturnthick-1-w { background-position: 0 -64px; }\\n.ui-icon-arrowreturnthick-1-n { background-position: -16px -64px; }\\n.ui-icon-arrowreturnthick-1-e { background-position: -32px -64px; }\\n.ui-icon-arrowreturnthick-1-s { background-position: -48px -64px; }\\n.ui-icon-arrowreturn-1-w { background-position: -64px -64px; }\\n.ui-icon-arrowreturn-1-n { background-position: -80px -64px; }\\n.ui-icon-arrowreturn-1-e { background-position: -96px -64px; }\\n.ui-icon-arrowreturn-1-s { background-position: -112px -64px; }\\n.ui-icon-arrowrefresh-1-w { background-position: -128px -64px; }\\n.ui-icon-arrowrefresh-1-n { background-position: -144px -64px; }\\n.ui-icon-arrowrefresh-1-e { background-position: -160px -64px; }\\n.ui-icon-arrowrefresh-1-s { background-position: -176px -64px; }\\n.ui-icon-arrow-4 { background-position: 0 -80px; }\\n.ui-icon-arrow-4-diag { background-position: -16px -80px; }\\n.ui-icon-extlink { background-position: -32px -80px; }\\n.ui-icon-newwin { background-position: -48px -80px; }\\n.ui-icon-refresh { background-position: -64px -80px; }\\n.ui-icon-shuffle { background-position: -80px -80px; }\\n.ui-icon-transfer-e-w { background-position: -96px -80px; }\\n.ui-icon-transferthick-e-w { background-position: -112px -80px; }\\n.ui-icon-folder-collapsed { background-position: 0 -96px; }\\n.ui-icon-folder-open { background-position: -16px -96px; }\\n.ui-icon-document { background-position: -32px -96px; }\\n.ui-icon-document-b { background-position: -48px -96px; }\\n.ui-icon-note { background-position: -64px -96px; }\\n.ui-icon-mail-closed { background-position: -80px -96px; }\\n.ui-icon-mail-open { background-position: -96px -96px; }\\n.ui-icon-suitcase { background-position: -112px -96px; }\\n.ui-icon-comment { background-position: -128px -96px; }\\n.ui-icon-person { background-position: -144px -96px; }\\n.ui-icon-print { background-position: -160px -96px; }\\n.ui-icon-trash { background-position: -176px -96px; }\\n.ui-icon-locked { background-position: -192px -96px; }\\n.ui-icon-unlocked { background-position: -208px -96px; }\\n.ui-icon-bookmark { background-position: -224px -96px; }\\n.ui-icon-tag { background-position: -240px -96px; }\\n.ui-icon-home { background-position: 0 -112px; }\\n.ui-icon-flag { background-position: -16px -112px; }\\n.ui-icon-calendar { background-position: -32px -112px; }\\n.ui-icon-cart { background-position: -48px -112px; }\\n.ui-icon-pencil { background-position: -64px -112px; }\\n.ui-icon-clock { background-position: -80px -112px; }\\n.ui-icon-disk { background-position: -96px -112px; }\\n.ui-icon-calculator { background-position: -112px -112px; }\\n.ui-icon-zoomin { background-position: -128px -112px; }\\n.ui-icon-zoomout { background-position: -144px -112px; }\\n.ui-icon-search { background-position: -160px -112px; }\\n.ui-icon-wrench { background-position: -176px -112px; }\\n.ui-icon-gear { background-position: -192px -112px; }\\n.ui-icon-heart { background-position: -208px -112px; }\\n.ui-icon-star { background-position: -224px -112px; }\\n.ui-icon-link { background-position: -240px -112px; }\\n.ui-icon-cancel { background-position: 0 -128px; }\\n.ui-icon-plus { background-position: -16px -128px; }\\n.ui-icon-plusthick { background-position: -32px -128px; }\\n.ui-icon-minus { background-position: -48px -128px; }\\n.ui-icon-minusthick { background-position: -64px -128px; }\\n.ui-icon-close { background-position: -80px -128px; }\\n.ui-icon-closethick { background-position: -96px -128px; }\\n.ui-icon-key { background-position: -112px -128px; }\\n.ui-icon-lightbulb { background-position: -128px -128px; }\\n.ui-icon-scissors { background-position: -144px -128px; }\\n.ui-icon-clipboard { background-position: -160px -128px; }\\n.ui-icon-copy { background-position: -176px -128px; }\\n.ui-icon-contact { background-position: -192px -128px; }\\n.ui-icon-image { background-position: -208px -128px; }\\n.ui-icon-video { background-position: -224px -128px; }\\n.ui-icon-script { background-position: -240px -128px; }\\n.ui-icon-alert { background-position: 0 -144px; }\\n.ui-icon-info { background-position: -16px -144px; }\\n.ui-icon-notice { background-position: -32px -144px; }\\n.ui-icon-help { background-position: -48px -144px; }\\n.ui-icon-check { background-position: -64px -144px; }\\n.ui-icon-bullet { background-position: -80px -144px; }\\n.ui-icon-radio-on { background-position: -96px -144px; }\\n.ui-icon-radio-off { background-position: -112px -144px; }\\n.ui-icon-pin-w { background-position: -128px -144px; }\\n.ui-icon-pin-s { background-position: -144px -144px; }\\n.ui-icon-play { background-position: 0 -160px; }\\n.ui-icon-pause { background-position: -16px -160px; }\\n.ui-icon-seek-next { background-position: -32px -160px; }\\n.ui-icon-seek-prev { background-position: -48px -160px; }\\n.ui-icon-seek-end { background-position: -64px -160px; }\\n.ui-icon-seek-start { background-position: -80px -160px; }\\n/* ui-icon-seek-first is deprecated, use ui-icon-seek-start instead */\\n.ui-icon-seek-first { background-position: -80px -160px; }\\n.ui-icon-stop { background-position: -96px -160px; }\\n.ui-icon-eject { background-position: -112px -160px; }\\n.ui-icon-volume-off { background-position: -128px -160px; }\\n.ui-icon-volume-on { background-position: -144px -160px; }\\n.ui-icon-power { background-position: 0 -176px; }\\n.ui-icon-signal-diag { background-position: -16px -176px; }\\n.ui-icon-signal { background-position: -32px -176px; }\\n.ui-icon-battery-0 { background-position: -48px -176px; }\\n.ui-icon-battery-1 { background-position: -64px -176px; }\\n.ui-icon-battery-2 { background-position: -80px -176px; }\\n.ui-icon-battery-3 { background-position: -96px -176px; }\\n.ui-icon-circle-plus { background-position: 0 -192px; }\\n.ui-icon-circle-minus { background-position: -16px -192px; }\\n.ui-icon-circle-close { background-position: -32px -192px; }\\n.ui-icon-circle-triangle-e { background-position: -48px -192px; }\\n.ui-icon-circle-triangle-s { background-position: -64px -192px; }\\n.ui-icon-circle-triangle-w { background-position: -80px -192px; }\\n.ui-icon-circle-triangle-n { background-position: -96px -192px; }\\n.ui-icon-circle-arrow-e { background-position: -112px -192px; }\\n.ui-icon-circle-arrow-s { background-position: -128px -192px; }\\n.ui-icon-circle-arrow-w { background-position: -144px -192px; }\\n.ui-icon-circle-arrow-n { background-position: -160px -192px; }\\n.ui-icon-circle-zoomin { background-position: -176px -192px; }\\n.ui-icon-circle-zoomout { background-position: -192px -192px; }\\n.ui-icon-circle-check { background-position: -208px -192px; }\\n.ui-icon-circlesmall-plus { background-position: 0 -208px; }\\n.ui-icon-circlesmall-minus { background-position: -16px -208px; }\\n.ui-icon-circlesmall-close { background-position: -32px -208px; }\\n.ui-icon-squaresmall-plus { background-position: -48px -208px; }\\n.ui-icon-squaresmall-minus { background-position: -64px -208px; }\\n.ui-icon-squaresmall-close { background-position: -80px -208px; }\\n.ui-icon-grip-dotted-vertical { background-position: 0 -224px; }\\n.ui-icon-grip-dotted-horizontal { background-position: -16px -224px; }\\n.ui-icon-grip-solid-vertical { background-position: -32px -224px; }\\n.ui-icon-grip-solid-horizontal { background-position: -48px -224px; }\\n.ui-icon-gripsmall-diagonal-se { background-position: -64px -224px; }\\n.ui-icon-grip-diagonal-se { background-position: -80px -224px; }\\n\\n\\n/* Misc visuals\\n----------------------------------*/\\n\\n/* Corner radius */\\n.ui-corner-all,\\n.ui-corner-top,\\n.ui-corner-left,\\n.ui-corner-tl {\\n\\tborder-top-left-radius: 3px;\\n}\\n.ui-corner-all,\\n.ui-corner-top,\\n.ui-corner-right,\\n.ui-corner-tr {\\n\\tborder-top-right-radius: 3px;\\n}\\n.ui-corner-all,\\n.ui-corner-bottom,\\n.ui-corner-left,\\n.ui-corner-bl {\\n\\tborder-bottom-left-radius: 3px;\\n}\\n.ui-corner-all,\\n.ui-corner-bottom,\\n.ui-corner-right,\\n.ui-corner-br {\\n\\tborder-bottom-right-radius: 3px;\\n}\\n\\n/* Overlays */\\n.ui-widget-overlay {\\n\\tbackground: #aaaaaa;\\n\\topacity: .3;\\n\\tfilter: Alpha(Opacity=30); /* support: IE8 */\\n}\\n.ui-widget-shadow {\\n\\t-webkit-box-shadow: 0px 0px 5px #666666;\\n\\tbox-shadow: 0px 0px 5px #666666;\\n}\\n", ""]);\n\n\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/jquery-ui.css?../node_modules/css-loader/dist/cjs.js')},,,function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/ui-icons_444444_256x240.png";\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/images/ui-icons_444444_256x240.png?')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/ui-icons_555555_256x240.png";\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/images/ui-icons_555555_256x240.png?')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/ui-icons_ffffff_256x240.png";\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/images/ui-icons_ffffff_256x240.png?')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/ui-icons_777620_256x240.png";\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/images/ui-icons_777620_256x240.png?')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/ui-icons_cc0000_256x240.png";\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/images/ui-icons_cc0000_256x240.png?')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/ui-icons_777777_256x240.png";\n\n//# sourceURL=webpack:///./vendors/jquery-ui-1.12.1.custom/images/ui-icons_777777_256x240.png?')},function(module,exports){eval("var checkboxAdditionalList = document.querySelectorAll(\".checkbox__list-wrp\"),\n    checkboxListBody = document.querySelectorAll(\".checkbox__list-body\"); //console.log(\"checkboxAdditionalList =\" + checkboxAdditionalList)\n\nfor (var i = 0; i < checkboxAdditionalList.length; i++) {\n  checkboxAdditionalList[i].addEventListener('click', function (event) {\n    var target = event.target;\n\n    if (target.classList.contains('checkbox__list-svg')) {\n      this.querySelector('.checkbox__list-svg').classList.toggle('checkbox__list-svg--opened');\n      this.querySelector('.checkbox__list-body').classList.toggle('checkbox__list-body--disabled');\n    }\n  });\n}\n\n//# sourceURL=webpack:///./blocks/form_elements/checkbox/checkbox.js?")}]);